//
// Created by Terence on 2018/8/2.
//

#ifndef CCAT_CLIENT_H
#define CCAT_CLIENT_H

#include <string>

namespace cat {

    using namespace std;

    const string SUCCESS = "0";

    class Transaction {
    private:
        void* trans;

    public:
        Transaction(const string& type, const string& name);

        void Complete();

        unsigned long GetDurationMs();

        string GetType();

        string GetName();

        string GetStatus();

        void SetStatus(const string& status);

        void SetDurationInMillis(unsigned long ms);

        void SetData(const string& data);

        void AddData(const string& key, const string& val);
    };

    class Event {
    private:
        void* event;
    public:
        Event(const string& type, const string& name);

        void Complete();

        string GetType();

        string GetName();

        string GetStatus();

        void SetStatus(const string& status);

        void SetData(const string& data);

        void AddData(const string& key, const string& val);
    };

    void init(const string& domain);

    void destroy();

    void logEvent(const string& type, const string& name, const string& status = SUCCESS, const string& data = "");

    void logMetricForCount(const string& key, unsigned int count = 1);

    void logMetricForDuration(const string& key, unsigned long ms);
};

#endif //CCAT_CLIENT_H
