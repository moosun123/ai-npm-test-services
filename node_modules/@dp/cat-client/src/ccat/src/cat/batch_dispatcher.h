#ifndef CCAT_DP_BATCH_DISPATCHER_H
#define CCAT_DP_BATCH_DISPATCHER_H

#include <lib/cat_mpsc_queue.h>

typedef void (* catBatchAction)(const char *type, const char *name, int count, int error, unsigned long long sum);

typedef struct catBatchDispatcher {
    const char* name;
    CatMPSCQueue* batchQueue;
    pthread_t dispatcher;
    catBatchAction batchAction;
    volatile int running;
} CatBatchDispatcher;

typedef struct catBatchElement {
    const char* name;
    const char* type;
    int count;
    int error;
    unsigned long long durationSumInMillis;
} CatBatchElement;

CatBatchDispatcher * NewCatBatchDispatcher(const char* name, catBatchAction batchAction, size_t queueSize);
void StopCatBatchDispatcher(CatBatchDispatcher* batchDispatcher);

int DispatchTransactionToBatchDispatcher(
    CatBatchDispatcher* dispatcher,
    const char *type,
    const char *name,
    int count,
    int error,
    unsigned long long durationMsSum
);
int DispatchEventToBatchDispatcher(
    CatBatchDispatcher* dispatcher,
    const char *type,
    const char *name,
    int count,
    int error
);

#endif //CCAT_DP_BATCH_DISPATCHER_H
