#include <gtest/gtest.h>
#include <cat/client.h>
#include <lib/cat_time_util.h>
extern "C"
{
    #include "lib/cat_sds.h"
}
TEST(SDS,testsds){
    catsds str= catsdsnewEmpty(10);
    str = catsdscatlen(str, "0000", 0);
    catsdsupdatelen(str);
    catsdsRemoveFreeSpace(str);

    int length =catsdsAllocSize(str);
    catsdsIncrLen(str,0);
    catsdsIncrLen(str,0);
    catsdsgrowzero(str,0);

    char s[100];
    long lnum = 9999;
    catsdsfromlonglong(lnum);
    unsigned long long llnum = 99999;
    catsdsfromlonglong(llnum);
    catsds name = catsdsnew("");
    catsdscatfmt(name, "Cat_%s_Client_Version", "2019");
    catsds name2 = catsdsnew("");
    catsdscatfmt(name2, "Cat_%i_Client_Version", 2019);
    catsds name3 = catsdsnew("");
    catsdscatfmt(name3, "Cat_%I_Client_Version", lnum);
    catsds name4 = catsdsnew("");
    catsdscatfmt(name4, "Cat_%u_Client_Version", 2019);
    catsds name5 = catsdsnew("");
    catsdscatfmt(name5, "Cat_%U_Client_Version", lnum);
    catsds names = catsdsnew("");
    catsdscatfmt(names, "Cat_%%U_Client_Version", "%");

    catsds testTrim = catsdsnew("AA...AA.a.aa.aHelloWorld     :::");
    catsdstrim(testTrim, "Aa. :");

    catsds testRange = catsdsnew("Hello World");
    catsdsrange(testRange, 1, -1);

    char *line="0123456789abcde";
    int agrc[100];
    catsdssplitargs(line,agrc);
}

TEST(SDS, test01) {
    catsds a = catsdsempty();
    printf("a before sdscat = %d\n", a);
    catsds c = catsdscatprintf(a, "%s likes apple", "alex");

    printf("after sdscat\n");
    printf("a = %d\n", a);
    printf("c = %d\n", c);

    printf("a = %s\n", a);
    printf("c = %s\n", c);
}