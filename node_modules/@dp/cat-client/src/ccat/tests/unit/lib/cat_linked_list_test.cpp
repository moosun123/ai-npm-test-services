
#include "gtest/gtest.h"
#include "lib/cat_linked_list.h"

TEST(CatLinkedListTests, basicTest) {
    CatLinkedList_T list = NULL;
    int result = newCatLinkedList(&list, NULL);
    ASSERT_EQ(result, 1);
    result = catLinkedListDestroy(list);
    ASSERT_EQ(result, 1);
}

TEST(CatLinkedListTests, test01) {
    CatLinkedList_T list = NULL;
    int result = newCatLinkedList(&list, NULL);
    ASSERT_EQ(result, 1);
    int a = 1;
    int b = 2;
    int c = 3;
    catLinkedListAdd(list, &a);
    catLinkedListAdd(list, &b);
    catLinkedListAdd(list, &c);

    ASSERT_EQ(catLinkedListSize(list), 3);

    catLinkedListRemove(list, &a);
    ASSERT_EQ(catLinkedListSize(list), 2);

    void** dataArray;
    int length;
    result = catLinkedListToArray(list, &dataArray, &length);
    ASSERT_EQ(result, 1);
    ASSERT_EQ(length, 2);
    ASSERT_EQ(*((int*)dataArray[0]), 2);
    ASSERT_EQ(*((int*)dataArray[1]), 3);

    result = catLinkedListDestroy(list);
    ASSERT_EQ(result, 1);
}

TEST(CatLinkedListTests, test02) {
    CatLinkedList_T list = NULL;
    int result = newCatLinkedList(&list, NULL);
    ASSERT_EQ(result, 1);
    int a = 1;
    int b = 2;
    int c = 3;
    catLinkedListAdd(list, &a);
    catLinkedListAdd(list, &b);
    catLinkedListAdd(list, &c);

    ASSERT_EQ(catLinkedListSize(list), 3);

    catLinkedListRemove(list, &b);
    ASSERT_EQ(catLinkedListSize(list), 2);

    void** dataArray;
    int length;
    result = catLinkedListToArray(list, &dataArray, &length);
    ASSERT_EQ(result, 1);
    ASSERT_EQ(length, 2);
    ASSERT_EQ(*((int*)dataArray[0]), 1);
    ASSERT_EQ(*((int*)dataArray[1]), 3);

    result = catLinkedListDestroy(list);
    ASSERT_EQ(result, 1);
}

TEST(CatLinkedListTests, test03) {
    CatLinkedList_T list = NULL;
    int result = newCatLinkedList(&list, NULL);
    ASSERT_EQ(result, 1);
    int a = 1;
    int b = 2;
    int c = 3;
    catLinkedListAdd(list, &a);
    catLinkedListAdd(list, &b);
    catLinkedListAdd(list, &c);

    ASSERT_EQ(catLinkedListSize(list), 3);

    catLinkedListRemove(list, &c);
    ASSERT_EQ(catLinkedListSize(list), 2);

    void** dataArray;
    int length;
    result = catLinkedListToArray(list, &dataArray, &length);
    ASSERT_EQ(result, 1);
    ASSERT_EQ(length, 2);
    ASSERT_EQ(*((int*)dataArray[0]), 1);
    ASSERT_EQ(*((int*)dataArray[1]), 2);

    result = catLinkedListDestroy(list);
    ASSERT_EQ(result, 1);
}

TEST(CatLinkedListTests, test04) {
    CatLinkedList_T list = NULL;
    int result = newCatLinkedList(&list, NULL);
    ASSERT_EQ(result, 1);
    int a = 1;
    int b = 2;
    int c = 3;
    catLinkedListAdd(list, &a);
    catLinkedListAdd(list, &b);
    catLinkedListAdd(list, &c);

    ASSERT_EQ(catLinkedListSize(list), 3);

    catLinkedListRemove(list, &a);
    catLinkedListRemove(list, &b);
    catLinkedListRemove(list, &c);
    ASSERT_EQ(catLinkedListSize(list), 0);

    result = catLinkedListRemove(list, &a);
    ASSERT_EQ(result, 0);

    result = catLinkedListDestroy(list);
    ASSERT_EQ(result, 1);
}

TEST(CatLinkedListTests, test05) {
    CatLinkedList_T list = NULL;
    int result = newCatLinkedList(&list, NULL);
    ASSERT_EQ(result, 1);
    int a = 1;
    int b = 2;
    int c = 3;
    catLinkedListAdd(list, &a);
    catLinkedListAdd(list, &b);
    catLinkedListAdd(list, &c);

    ASSERT_EQ(catLinkedListSize(list), 3);

    void** dataArray;
    int length;
    result = catLinkedListToArray(list, &dataArray, &length);
    ASSERT_EQ(result, 1);
    ASSERT_EQ(length, 3);
    for (int i = 0; i < 3; ++i) {
        ASSERT_EQ(*((int*)dataArray[i]), i+1);
    }

    result = catLinkedListDestroy(list);
    ASSERT_EQ(result, 1);
}

TEST(CatLinkedListTests, test06) {
    CatLinkedList_T list = NULL;
    int result = catLinkedListSize(list);
    ASSERT_EQ(result, 0);
    int a = 1;
    result = catLinkedListRemove(list, &a);
    ASSERT_EQ(result, 0);
    void** dataArray;
    int length;
    result = catLinkedListToArray(list, &dataArray, &length);
    ASSERT_EQ(result, 0);
    result = catLinkedListDestroy(list);
    ASSERT_EQ(result, 0);
}