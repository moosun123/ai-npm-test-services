#include <gtest/gtest.h>
extern "C" 
{ 
    #include "lib/cat_json.h"
} 

/* Used by some code below as an example datatype. */
struct record {const char *precision;double lat,lon;const char *address,*city,*state,*zip,*country; };

/* Create a bunch of objects as demonstration. */
TEST(CreateObjects,TESTJSON){
    catCJSON *root,*fmt,*img,*thm,*fld;char *out;int i;	/* declare a few. */
    /* Our "days of the week" array: */
    const char *strings[7]={"Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"};
    /* Our matrix: */
    int numbers[3][3]={{0,-1,0},{1,0,0},{0,0,1}};
    /* Our "gallery" item: */
    int ids[4]={116,943,234,38793};
    /* Our array of "records": */
    struct record fields[2]={
            {"zip",37.7668,-1.223959e+2,"","SAN FRANCISCO","CA","94107","US"},
            {"zip",37.371991,-1.22026e+2,"","SUNNYVALE","CA","94085","US"}};

    /* Here we construct some JSON standards, from the JSON site. */

    /* Our "Video" datatype: */
    root=catCJSON_CreateObject();
    catCJSON_AddItemToObject(root, "name", catCJSON_CreateString("Jack (\"Bee\") Nimble"));
    catCJSON_AddItemToObject(root, "format", fmt=catCJSON_CreateObject());
    catCJSON_AddStringToObject(fmt,"type",		"rect");
    catCJSON_AddStringToObject(fmt,"str",		"null");
    catCJSON_AddNumberToObject(fmt,"width",		1920);
    catCJSON_AddNumberToObject(fmt,"height",		1080);
    catCJSON_AddNumberToObject(fmt,"dot",		0.0);
    catCJSON_AddNumberToObject(fmt,"dots",		-1);
    catCJSON_AddFalseToObject (fmt, "interlace");
    catCJSON_AddNumberToObject(fmt,"frame rate",	24);


    out= catCJSON_Print(root);
    catCJSON_Delete(root);		free(out);	/* Print to text, Delete the catCJSON, print it, release the string. */

    /* Our "days of the week" array: */
    root=catCJSON_CreateStringArray(strings,7);

    out= catCJSON_Print(root);
    catCJSON_Delete(root);		free(out);

    /* Our matrix: */
    root=catCJSON_CreateArray();
    for (i=0;i<3;i++) catCJSON_AddItemToArray(root,catCJSON_CreateIntArray(numbers[i],3));

/*	catCJSON_ReplaceItemInArray(root,1,catCJSON_CreateString("Replacement")); */

    out= catCJSON_Print(root);
    catCJSON_Delete(root);		free(out);


    /* Our "gallery" item: */
    root=catCJSON_CreateObject();
    catCJSON_AddItemToObject(root, "Image", img=catCJSON_CreateObject());
    catCJSON_AddNumberToObject(img,"Width",800);
    catCJSON_AddNumberToObject(img,"Height",600);
    catCJSON_AddStringToObject(img,"Title","View from 15th Floor");
    catCJSON_AddItemToObject(img, "Thumbnail", thm=catCJSON_CreateObject());
    catCJSON_AddStringToObject(thm, "Url", "http:/*www.example.com/image/481989943");
    catCJSON_AddNumberToObject(thm,"Height",125);
    catCJSON_AddStringToObject(thm,"Width","100");
    catCJSON_AddItemToObject(img,"IDs", catCJSON_CreateIntArray(ids,4));

    out= catCJSON_Print(root);
    catCJSON_Delete(root);		free(out);

    /* Our array of "records": */

    root=catCJSON_CreateArray();
    for (i=0;i<2;i++)
    {
        catCJSON_AddItemToArray(root,fld=catCJSON_CreateObject());
        catCJSON_AddStringToObject(fld, "precision", fields[i].precision);
        catCJSON_AddNumberToObject(fld, "Latitude", fields[i].lat);
        catCJSON_AddNumberToObject(fld, "Longitude", fields[i].lon);
        catCJSON_AddStringToObject(fld, "Address", fields[i].address);
        catCJSON_AddStringToObject(fld, "City", fields[i].city);
        catCJSON_AddStringToObject(fld, "State", fields[i].state);
        catCJSON_AddStringToObject(fld, "Zip", fields[i].zip);
        catCJSON_AddStringToObject(fld, "Country", fields[i].country);
    }

/*	catCJSON_ReplaceItemInObject(catCJSON_GetArrayItem(root,1),"City",catCJSON_CreateIntArray(ids,4)); */

    out= catCJSON_Print(root);
    catCJSON_Delete(root);		free(out);

}
TEST(TESTJSON,JSON){
    /* a bunch of json: */
    char text1[]="{\n\"name\": \"Jack (\\\"Bee\\\") Nimble\", \n\"format\": {\"type\":       \"rect\", \n\"width\":      1920, \n\"height\":     1080, \n\"interlace\":  false,\"frame rate\": 24\n}\n}";
    char text2[]="[\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"]";
    char text3[]="[\n    [0, -1, 0],\n    [1, 0, 0],\n    [0, 0, 1]\n	]\n";
    char text4[]="{\n		\"Image\": {\n			\"Width\":  800,\n			\"Height\": 600,\n			\"Title\":  \"View from 15th Floor\",\n			\"Thumbnail\": {\n				\"Url\":    \"http:/*www.example.com/image/481989943\",\n				\"Height\": 125,\n				\"Width\":  \"100\"\n		},\n			\"IDs\": [116, 943, 234, 38793]\n		}\n	}";
    char text5[]="[\n	 {\n	 \"precision\": \"zip\",\n	 \"Latitude\":  37.7668,\n	 \"Longitude\": -122.3959,\n	 \"Address\":   \"\",\n	 \"City\":      \"SAN FRANCISCO\",\n	 \"State\":     \"CA\",\n	 \"Zip\":       \"94107\",\n	 \"Country\":   \"US\"\n	 },\n	 {\n	 \"precision\": \"zip\",\n	 \"Latitude\":  37.371991,\n	 \"Longitude\": -122.026020,\n	 \"Address\":   \"\",\n	 \"City\":      \"SUNNYVALE\",\n	 \"State\":     \"CA\",\n	 \"Zip\":       \"94085\",\n	 \"Country\":   \"US\"\n	 }\n	 ]";

     char *out1;catCJSON *json1;

    json1= catCJSON_Parse(text1);
    if (!json1) {
        catCJSON_GetErrorPtr();
    }
    else
    {
        out1= catCJSON_Print(json1);
        catCJSON_Delete(json1);
        free(out1);
    }

    char *out2;catCJSON *json2;

    json2= catCJSON_Parse(text2);
    if (!json2) {
        catCJSON_GetErrorPtr();
    }
    else
    {
        out2= catCJSON_Print(json2);
        catCJSON_Delete(json2);
        free(out2);
    }

    char *out3;catCJSON *json3;

    json3= catCJSON_Parse(text3);
    if (!json3) {
        catCJSON_GetErrorPtr();
    }
    else
    {
        out3= catCJSON_Print(json3);
        catCJSON_Delete(json3);
        free(out3);
    }

    char *out4;catCJSON *json4;

    json4= catCJSON_Parse(text4);
    if (!json4) {
        catCJSON_GetErrorPtr();
    }
    else
    {
        out4= catCJSON_Print(json4);
        catCJSON_Delete(json4);
        free(out4);
    }

    char *out5;catCJSON *json5;

    json5= catCJSON_Parse(text5);
    if (!json5) {
        catCJSON_GetErrorPtr();
    }
    else
    {
        out5= catCJSON_Print(json5);
        catCJSON_Delete(json5);
        free(out5);
    }

}
