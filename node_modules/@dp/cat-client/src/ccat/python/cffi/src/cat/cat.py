#!/usr/bin/env python
# -*- coding: utf-8 -*-

# Author: stdrickforce (Tengyuan Fan)
# Email: <stdrickforce@gmail.com> <fantengyuan@meituan.com>

__all__ = ['init', 'switch', 'catSdk',
           'CAT_SUCCESS', 'CAT_ERROR', 'MODE_COROUTINE']

import threading
import logging

from .const import (
    CAT_SUCCESS,
    CAT_ERROR
)

from .utils import (
    deprecated,
    synchronized,
)

from .container import container

from .sdk import (
    catSdk as catSdkDefault,
)

log = logging.getLogger()

MODE_COROUTINE = 0b1

g_mode = 0
g_monitor = False


@synchronized
def init(appkey, **kwargs):
    if g_mode == MODE_COROUTINE:
        kwargs['logview'] = False
    sdk = catSdkDefault(appkey, **kwargs)
    container.put("catsdk", sdk)
    # _monitor()


def _monitor():
    global g_monitor
    if not g_monitor:
        from .monitor import run_monitor
        th = threading.Thread(target=run_monitor, name="cat_heartbeat")
        th.setDaemon(True)
        th.start()
    g_monitor = True


@deprecated("using cat.init(logview=False) instead")
def switch(mode):
    global g_mode
    g_mode = mode


@deprecated("using cat.init instead")
def catSdk(appkey):
    sdk = container.get("catsdk")
    if sdk is None:
        init(appkey)
        return container.get("catsdk")
    else:
        return sdk
