#!/usr/bin/env python
# -*- coding: utf-8 -*-

# Author: stdrickforce (Tengyuan Fan)
# Email: <stdrickforce@gmail.com> <fantengyuan@baixing.com>

import cat
import time


def ignore_exception(func):
    def wraps(*args, **kwargs):
        try:
            return func(*args, **kwargs)
        except Exception:
            pass
    return wraps


@ignore_exception
@cat.transaction("Trans", "T1")
def test1():
    '''
    Use with decorator
    '''
    print(1 / 0)  # NOTE will cause ZeroDivisionException


def test2():
    '''
    Use with context manager
    '''

    def do_something():
        import random
        if random.random() < 0.1:
            raise Exception("error occured!")

    with cat.Transaction("Trans", "T2") as t:
        cat.log_event("Event", "E2")
        try:
            do_something()
        except Exception:
            t.set_status(cat.CAT_ERROR)
        t.add_data("hello world!")


def test3():
    '''
    Plain usage (not recommended).
    '''
    try:
        trans = cat.Transaction("Trans", "T3")
        trans.add_data("not recommended")
    finally:
        # NOTE don't forget to complete the transaction!
        trans.complete()


def test4():
    cat.log_batch_transaction("TransBatch", "T1", 100, 11, 100)


if __name__ == '__main__':
    cat.init("pycat")
    for i in range(1000):
        test1()
        test2()
        test3()
        test4()
    time.sleep(1)
