from ctypes import *
import platform

OS_ENABLE = 'Linux' in platform.system()

# load the shared object file
if OS_ENABLE:
    cat = CDLL('./lib/libcatclient.so')


def initCatClient(appkey):
    if OS_ENABLE:
        cat.catClientInit(appkey)


def newTransaction(type, name):
    if OS_ENABLE:
        return cat.newTransaction(type, name)


def setTransactionStatus(transaction, status):
    if OS_ENABLE:
        cat.setTransactionStatus(transaction, status)


def completeTransaction(transaction):
    if OS_ENABLE:
        cat.completeTransaction(transaction)


def logEvent(type, name, status, nameValuePairs):
    if OS_ENABLE:
        cat.logEvent(type, name, status, nameValuePairs)


def logError(msg, err_stack):
    if OS_ENABLE:
        cat.logError(msg, err_stack)


def logMetricForCount(name):
    if OS_ENABLE:
        cat.logMetricForCount(name)


def logMetricForDuration(name, durationMs):
    if OS_ENABLE:
        cat.logMetricForDuration(name, durationMs)


def newCatBuildMetricHelper(name):
    if OS_ENABLE:
        return cat.CatBuildMetricHelper(name)


def addMetricTag(helper, key, val):
    if OS_ENABLE:
        cat.addMetricTag(helper, key, val)


def addMetricName(helper, name):
    if OS_ENABLE:
        cat.addMetricName(helper, name)


def addMetricCount(helper, count):
    if OS_ENABLE:
        cat.addMetricCount(helper, count)


def addMetricDuration(helper, durationMs):
    if OS_ENABLE:
        cat.addMetricDuration(helper, durationMs)
