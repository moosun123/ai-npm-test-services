// const AccessControlManager = require('./AccessControlManager')
const KmsTokenImpl = require('../token/KmsTokenImpl')
const HmacSHA1Signature = require('../token/HmacSHA1Signature')

class DefaultAuth {
    constructor(localNamespace, authConfig = {updateSecFrequency: 60}) {
        this.localNamespace = localNamespace
        this.authConfig = authConfig
        // this.accessControlManager = new AccessControlManager(localNamespace)
        // this.accessControlManager.init()
        this.tokenService = new KmsTokenImpl()

        // this.refresh()
    }

    refresh() {
        setTimeout(() => {
            this.accessControlManager.refresh()
        }, (this.authConfig.updateSecFrequency || 60) * 1000)
    }

    /**
     * @return {promise}
     * @param {*} name
     * @param {*} type
     * @param {*} context
     */
    getTokenSignature(name, type, context) {
        type = type || {type: '0001', signature: HmacSHA1Signature}
        context = context || null

        return this.tokenService.getTokenSignature(this.localNamespace, name, type, context)
    }
}

module.exports = DefaultAuth
