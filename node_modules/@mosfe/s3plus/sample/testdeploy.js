const path = require('path');
const { cloud } = require('./mss.config.js');
const { tenantId, endpoint, CDNHost } = cloud;
const Client = require('..');
const env = process.env;

async function fn () {
    const cdn = new Client({
        accessKeyId: env.MSS_APP_KEY,
        accessKeySecret: env.MSS_APP_SECRET,
        tenantId,
        endpoint,
        bucket: 'testccc',
        deployCatalog: path.join(__dirname, 'dist'),
        increment: true, // 增量部署 暴露plus配置
        // CORSRule: [] // 配置跨域信息
        origin: ['http://a.sankuai.com', 'https://c.sankuai.com']
    });
    console.log(cdn.deployFailSuccessFileName)
    // const res1 = await cdn.mss.getBuffer(cdn.uselessFileName);
    // console.log(res1);
    // const r = await cdn.putBucketCors('crm', {
    //     CORSRule: []
    // });
    // const result = await cdn.getBucketCors('crm');
    
    // console.log(r, result);
    const file = await cdn.deploy();
    console.log('--file1', file);
    // const file = await cdn.cleanDeployFailSuccessResources();
    // console.log('--file', file);
    // const res1 = await cdn.mss.getBuffer(cdn.deployFailSuccessFileName);
    // console.log(res1);
    // const file = await cdn.fileIsExits('index.html', path.join(__dirname, 'dist'));
    // console.log('---===', file);
    // await cdn.cleanStatic();
    // const s = await cdn.getFile(path.join(__dirname, 'dist'));
    // const a = await cdn.getFile(path.join(__dirname, 'dist'));
    // console.log(s);
    // console.log(a)
    // const pathPrefix = await cdn.pathPrefix();
    // const data = await cdn.listObject();
    // console.log('---===', data);
    // const a = await cdn.mss.deleteBucketCors('crm');
    // const cors = await cdn.mss.g
    // console.log(env.MSS_APP_KEY)
    // console.log(a)
    // const res = await cdn.deleteObject(data);
    // console.log('---', res);
    // console.log(pathPrefix);
    // await cdn.deployHotCDN({
    //     MSS_KEY: '',
    //     MSS_SECRET: '',
    //     CDNHost,
    //     fuceCDN: 'http://fuse-cdn.vip.sankuai.com/v1'
    // });
}
fn();