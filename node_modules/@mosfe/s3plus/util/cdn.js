'use strict';

const URL = require('url');
const axios = require('axios');
const crypto = require('crypto');

const Service = (api, accessKey, accessSecret) => {
    const apiURL = URL.parse(api);
    const apiHost = apiURL.hostname;
    const apiPath = apiURL.pathname;
    const enc = encodeURIComponent;
    const getSign = query => {
        const params = Object.keys(query)
            .sort()
            .map(x => `${enc(x)}=${enc(query[x])}`)
            .join('&');
        const plain = `GET\n${apiHost}\n${apiPath}\n${params}`;
        const sign = crypto
            .createHmac('sha1', accessSecret)
            .update(plain)
            .digest('base64');
        return sign;
    };

    const req = async params => {
        const resp = await axios.get(api, {
            params: Object.assign(params, {
                Signature: getSign(params)
            })
        });
        return resp;
    };

    const refresh = async (opts) => {
        const { CDNHost, url, action } = opts || {};
        const query = {
            AWSAccessKeyId: accessKey,
            SignatureMethod: 'HmacSHA1',
            SignatureVersion: '2',
            Timestamp: new Date().toISOString(),
            Action: action, // prefetch refresh
            ObjectType: 'file',
            ObjectPath: url,
            Domain: URL.parse(CDNHost).hostname
        };
        return req(query);
    };

    return {
        refresh
    };
};

module.exports = Service;
