'use strict';

const path = require('path');
const cdnService = require('./cdn');

/**
 * cdn 刷新 及 预热 操作
 * @param {*} opts
 */
const apiHot = async (opts) => {
    const { fuceCDN, mssKey, mssSecret, files, CDNHost, action = 'prefetch' } = opts;
    const service = cdnService(
        fuceCDN,
        mssKey,
        mssSecret
    );

    let file = files.map((item) => {
        return 'http://' + path.join(CDNHost, item);
    });
    const sliceFile = [];
    const someLength = 3; // max: 50
    const len = file.length;
    for (let i = 0, start = 0, end = someLength; i < Math.ceil(file.length / someLength); i++, start = end, end += someLength) {
        if (end > len) {
            end = len;
        }
        let someFile = file.slice(start, end);

        sliceFile.push(someFile.join(','));
    }
    if (sliceFile.length === 0) {
        throw (new Error('check dist file!!! you should run build!'));
    }
    const dataPromise = sliceFile.map(async(item) => {
        let { data } = await service.refresh({
            CDNHost: `http://${CDNHost}`,
            url: item,
            action
        });
        return data;
    });
    return Promise.all(dataPromise).then((data) => {
        const success = data.every((item) => {
            return item.Message === 'success';
        });

        const failedUrls = data.filter((item) => {
            return item.Message !== 'success';
        }).map((item) => {
            return item.FailedUrl;
        });
        return {
            success,
            failedUrls
        };
    });
};

module.exports = apiHot;