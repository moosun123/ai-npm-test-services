const cat = require('@dp/cat-client');
const fs = require('fs');
const Debug = require('debug');
const APP_FILE_PATH = '/data/webapps/appkeys';
const OCTO_PROXY_FILE_PATH = '/opt/meituan/apps/octo_proxy/appkeys';
const debug = Debug('mtsdk.NodeThrift.cat');
const error = Debug('mtsdk.NodeThrift.cat.error');
const defaultAppKey = 'com.sankuai.simi.nodesdk';
function getAppKey() {
  let appkey = process.env.__appkey__ || global.__appkey__;
  if (!appkey) {
    try {
      try {
        appkeys = fs.readFileSync(APP_FILE_PATH).toString('utf-8');
      } catch (e) {
        error('Read %s File Error, %s', APP_FILE_PATH, e.message);
        try {
          appkeys = fs.readFileSync(OCTO_PROXY_FILE_PATH).toString('utf-8');
        } catch (e) {
          error('Read %s File Error, %s', OCTO_PROXY_FILE_PATH, e.message);
        }
      }
      if (appkeys) {
        appkeys = appkeys.split('\n');
        appkey = appkeys[0];
        global.__appkey__ = appkey;
        debug('Read %s File Success, Appkey is %s', APP_FILE_PATH, appkey);
      } else {
        error('Read %s File is empty', APP_FILE_PATH);
      }
    } catch (e) {}
  }
  return appkey || defaultAppKey;
}
let isInit = false;
function setCatAppKey(appKey) {
  if (!isInit) {
    cat.init({
      appName: appKey,
    });
    global.__appkey__ = appKey;
    isInit = true;
  }
}

function initCatAppKey() {
  if (!isInit) {
    let appKey = getAppKey();
    setCatAppKey(appKey);
  }
}

module.exports = cat;
module.exports.initCatAppKey = initCatAppKey;
module.exports.setCatAppKey = setCatAppKey;
