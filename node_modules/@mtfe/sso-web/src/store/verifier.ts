/**
 * Created by leon on 6/14/18.
 */
interface VerifierObj {
    CODE_VERIFIER_NAME: string;
    CODE_CHALLENGE_METHOD: string;

    setCodeVerifier(verifier: string): void;
    getCodeVerifier(): string;
    clearCodeVerifier(): void;
    getCodeChallengeMethod(): string;
    isSha256(): boolean;
}

export interface VerifierStorageArgs {
    method?: string;
}

export class VerifierStorage implements VerifierObj {
    CODE_VERIFIER_NAME = 'code_verifier';
    CODE_CHALLENGE_METHOD = 'SHA256';

    constructor(args: VerifierStorageArgs) {
        this.CODE_CHALLENGE_METHOD = args.method || this.CODE_CHALLENGE_METHOD;
    }

    setCodeVerifier(verifier: string) {
        sessionStorage.setItem(this.CODE_VERIFIER_NAME, verifier);
    }

    getCodeVerifier() {
        return sessionStorage.getItem(this.CODE_VERIFIER_NAME);
    }

    clearCodeVerifier() {
        sessionStorage.removeItem(this.CODE_VERIFIER_NAME);
    }

    getCodeChallengeMethod() {
        return this.CODE_CHALLENGE_METHOD;
    }

    isSha256() {
        return !!~this.CODE_CHALLENGE_METHOD.toLowerCase().indexOf('sha256');
    }
}