export interface LoggerModel {
    log(...args: any[]): void;
    warn(...args: any[]): void;
    error(...args: any[]): void;
}
export declare class Logger implements LoggerModel {
    private moduleName;
    constructor(name: string);
    log(...args: any[]): void;
    warn(...args: any[]): void;
    error(...args: any[]): void;
}
export interface UrlModel {
    getSearchString(name: string): string;
    getReqPath(href: string, original: string, prefix?: string): string;
}
export declare let urlObj: UrlModel;
export declare const whiteListAndBlackListCheck: (url: string, whiteLists?: string[], includeUrlList?: string[]) => boolean;
/**
 * check original url for not allow schema
 *
 * @param {string} url - original url
 * */
export declare const hasSchema: (url: string) => boolean;
/**
 * 获取浏览器的版本--仅大版本
 * Chrome
 */
export declare const getBrowserVersion: (browser: any) => any;
