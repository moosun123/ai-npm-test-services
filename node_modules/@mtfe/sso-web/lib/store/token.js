"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Created by leon on 6/14/18.
 */
var util = __importStar(require("../util"));
var DEFAULT_TOKEN_CFG = {
    name: 'ssoid',
    path: '/',
    domain: '',
};
var TokenStorage = /** @class */ (function () {
    function TokenStorage(tokenArgs) {
        this.clientId = tokenArgs.clientId;
    }
    TokenStorage.prototype.setToken = function (ssoid, sameSite) {
        if (!ssoid)
            return void 0;
        var options = {
            value: ssoid,
            name: this.clientId + "_" + DEFAULT_TOKEN_CFG.name,
            path: DEFAULT_TOKEN_CFG.path,
            domain: DEFAULT_TOKEN_CFG.domain,
            expires: new Date(Date.now() + 1000 * 60 * 60 * 24 * 30).toString(),
        };
        if (!sameSite && util.getBrowserVersion('chrome') >= 80) {
            Object.assign(options, {
                SameSite: 'None',
                Secure: true
            });
        }
        document.cookie = util.parseCookie(options);
    };
    TokenStorage.prototype.getToken = function () {
        // 添加分号防止取的key值在cookie最后
        var cookie = document.cookie + ";";
        var reg = new RegExp(this.clientId + "_" + DEFAULT_TOKEN_CFG.name + "=(.+?);");
        var parts = cookie.match(reg);
        if (parts)
            return parts[1];
        return '';
    };
    TokenStorage.prototype.clearToken = function () {
        document.cookie = util.parseCookie({
            value: '',
            name: this.clientId + "_" + DEFAULT_TOKEN_CFG.name,
            path: DEFAULT_TOKEN_CFG.path,
            domain: DEFAULT_TOKEN_CFG.domain,
            expires: 'expires=Thu, 01 Jan 1970 00:00:01 GMT',
        });
    };
    TokenStorage.prototype.setCookieStr = function (name, value, expiredTime) {
        var options = {
            value: value,
            name: name,
            path: DEFAULT_TOKEN_CFG.path,
            domain: DEFAULT_TOKEN_CFG.domain,
            expires: expiredTime || "Fri, 31 Dec 9999 23:59:59 GMT",
        };
        document.cookie = util.parseCookie(options);
    };
    return TokenStorage;
}());
exports.TokenStorage = TokenStorage;
//# sourceMappingURL=token.js.map