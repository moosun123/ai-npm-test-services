"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Created by leon on 6/14/18.
 */
var en_GB_1 = __importDefault(require("./locale/en_GB"));
var SYS_ERROR = en_GB_1.default.SYS_ERROR;
function advancedFetch(originalFetch, timeout) {
    var abortFunc;
    var abortPromise = new Promise(function (res, rej) {
        abortFunc = function () {
            rej('timeout, and abort promise');
        };
    });
    var highOrderFetch = Promise.race([
        originalFetch,
        abortPromise,
    ]);
    setTimeout(function () {
        abortFunc();
    }, timeout || 10 * 1000);
    return highOrderFetch;
}
var resStatusMW = function (res) {
    var reject = Promise.reject;
    reject = reject.bind(Promise);
    return res.status === 200 ? res.json() : reject({ code: res.status });
};
var resCatchError = function (err) {
    // @ts-ignore
    var ssoError = err;
    if (ssoError.data && ssoError.data.msg) {
        return { msg: ssoError.data.msg };
    }
    // 处理未知错误
    if (err.stack || typeof err === 'string') {
        console.error(err.stack || err);
    }
    return { msg: SYS_ERROR };
};
function fetchRequest(url, opts) {
    var options = {
        method: 'POST',
    };
    var resolve = Promise.resolve, reject = Promise.reject;
    resolve = resolve.bind(Promise);
    reject = reject.bind(Promise);
    var fetchOptions = Object.assign({}, options, opts);
    return advancedFetch(fetch(url, fetchOptions))
        .then(resStatusMW)
        .then(function (res) {
        if (res.code === 200) {
            return resolve(res.data);
        }
        return reject(res);
    })
        .catch(resCatchError);
}
exports.fetchRequest = fetchRequest;
//# sourceMappingURL=request.js.map