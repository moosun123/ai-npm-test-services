import { LoggerModel } from './util/common_util';
export interface RestClientModel {
    getToken(code: string, code_verifier: string, clientId: string): Promise<getTokenSuccessDataModel | string>;
    logout(token: string, clientId: string): Promise<void>;
}
export interface getTokenSuccessDataModel {
    accessToken: string;
    expires?: number;
    refreshExpires?: number;
    refreshToken?: string;
}
export declare class RestClient implements RestClientModel {
    apiUrlLogin: string;
    apiUrlOpen: string;
    logger: LoggerModel;
    constructor(args: {
        apiUrlLogin: string;
        apiUrlOpen: string;
    });
    getToken(code: string, codeVerifier: string, clientId: string): Promise<any>;
    logout(accessToken: string, clientId: string): Promise<any>;
}
