// 用于创建页面提示
let hasInjectedStyle = false;

const initStyle = () => {
    if (hasInjectedStyle) {
        return;
    }
    hasInjectedStyle = true;
    const style = document.createElement('style');
    style.innerHTML = `
        .sc-web-sdk-warn-btn {
            position: fixed;
            right: 10px;
            bottom: 10px;
            width: 5px;
            height: 5px;
            border: 2px solid #ee3333;
            border-radius: 50%;
            background-color: #fff;
            cursor: pointer;
            z-index: 300;
        }
        .sc-web-sdk-warn-tips {
            position: absolute;
            display: none;
            bottom: 100%;
            right: 0;
            width: 180px;
            box-sizing: border-box;
            padding: 10px;
            border-radius: 4px;
            font-size: 12px;
            color: #666;
            background-color: #fff;
            box-shadow: 0 0 50px 10px rgba(0, 0, 0, .15);
        }
        .sc-web-sdk-warn-btn:hover .sc-web-sdk-warn-tips{
            display: block;
        }
        .sc-web-sdk-tips-more {
            text-decoration: none;
            float: right;
        }
    `;
    document.head.appendChild(style);
};

export default (message: string, handler: () => void) => {
    initStyle();
    let container: Element | null = document.createElement('div');
    container.className = 'sc-web-sdk-warn-btn';
    container.innerHTML = `
        <div class="sc-web-sdk-warn-tips">
            <div class="sc-web-sdk-tips-inner">
                【服务组件-dev】<br/>${message}
                <a href="https://km.sankuai.com/page/1221184086" class="sc-web-sdk-tips-more" targe="_blank">...<a>
            </div>
        </div>
    `;
    let innerNd = container.querySelector('.sc-web-sdk-tips-inner');
    if (innerNd) {
        innerNd.addEventListener('click', handler, false);
    }
    document.body.appendChild(container);
    return {
        destroy: () => {
            innerNd && innerNd.removeEventListener('click', handler, false);
            container && container.parentNode?.removeChild(container);
            container = null;
            innerNd = null;
        }
    };
}