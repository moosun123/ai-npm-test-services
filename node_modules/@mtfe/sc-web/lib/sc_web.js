import { axiosSet } from "./axios";
const envOptions = ["test", "staging", "production"];
class SC {
    constructor(configs) {
        this.instanceMap = new Map();
        if (!envOptions.includes(configs.accessEnv)) {
            configs.accessEnv = envOptions[0];
            console.warn("accessEnv值缺少，参数的可选值为：production staging test，默认为test");
        }
        if (configs.componentId) {
            this.fetch = axiosSet(configs);
        }
        else {
            console.error(new Error('sc-web初始化缺少必须参数: componentId'));
        }
    }
    init() { }
    getChildInstance(configs) {
        const key = configs.componentId;
        let instance = this.instanceMap.get(key);
        if (!instance) {
            instance = new SC(configs);
            this.instanceMap.set(key, instance);
        }
        return instance;
    }
    setChildInstance(key, val) {
        this.instanceMap.set(key, val);
    }
}
export default function singletonWrapper(configs) {
    return new SC(configs);
}
//# sourceMappingURL=sc_web.js.map