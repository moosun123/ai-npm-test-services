import { DEFAULT_SC_ACCESS_CONFIG, IFRAME_ID, LOGIN_TIMEOUT, LOGIN_THROTTLE_TIME } from "../config/const";
function createIframe(src, timestamp, timerId, onlyLogin) {
    const iframe = document.createElement("iframe");
    iframe.src = src;
    iframe.id = IFRAME_ID;
    iframe.width = "0";
    iframe.height = "0";
    iframe.frameBorder = "0";
    iframe.setAttribute("timestamp", timestamp);
    iframe.setAttribute("timer-id", timerId);
    iframe.setAttribute("only-login", onlyLogin);
    document.body.appendChild(iframe);
    return iframe;
}
class LoginIframe {
    constructor(src, netEnv, timestamp, configs) {
        this.src = src;
        this.env = configs.accessEnv;
        this.netEnv = netEnv;
        this.timestamp = timestamp;
        this.onlyLogin = configs.loginImmediately;
    }
    send() {
        return new Promise((resolve, reject) => {
            this.timer && clearTimeout(this.timer);
            this.timer = setTimeout(() => {
                const iframe = this.getIframe();
                if (iframe && iframe.getAttribute('only-login') === '0') {
                    reject();
                }
                this.clear();
            }, LOGIN_TIMEOUT);
            this.setIframe();
            window.addEventListener("message", (event) => {
                const origin = event.origin || event.originalEvent.origin;
                if (origin !== DEFAULT_SC_ACCESS_CONFIG[this.env][`loginOrigin${this.netEnv}`]
                    || event.data.timestamp != this.timestamp)
                    return;
                if (event.data.code === 200) {
                    resolve(event);
                }
                else {
                    console.error('登陆sc失败，请检查是否已登陆sso');
                    reject();
                }
                this.clear();
            }, false);
        });
    }
    setIframe() {
        const iframe = this.getIframe();
        if (iframe) {
            const now = +new Date();
            if (this.onlyLogin && (now - Number(iframe.getAttribute("timestamp")) < LOGIN_THROTTLE_TIME)) {
                return;
            }
            else if (iframe.getAttribute('only-login') === '1' && (now - Number(iframe.getAttribute("timestamp")) < LOGIN_TIMEOUT)) {
                this.timestamp = Number(iframe.getAttribute("timestamp"));
                return;
            }
            else {
                this.clear();
            }
        }
        const onlyLogin = this.onlyLogin ? 1 : 0;
        createIframe(`${this.src}&timestamp=${this.timestamp}`, `${this.timestamp}`, `${this.timer}`, `${onlyLogin}`);
    }
    getIframe() {
        const iframe = document.getElementById(`${IFRAME_ID}`);
        return iframe;
    }
    clear() {
        const iframe = this.getIframe();
        let timerId = null;
        if (iframe) {
            timerId = iframe.getAttribute("timer-id");
            iframe.parentNode && iframe.parentNode.removeChild(iframe);
        }
        timerId && clearTimeout(Number(timerId));
    }
}
export function loginIframe(src, netEnv, timestamp, configs) {
    return new LoginIframe(src, netEnv, timestamp, configs);
}
//# sourceMappingURL=iframe_util.js.map