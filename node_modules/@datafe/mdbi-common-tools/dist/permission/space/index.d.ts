import VueRouter, { Route } from 'vue-router';
import { APP_TYPE } from '../auth/constants';
export interface AuthRouteMeta {
    resourceConfig?: ResourceConfigInMeta;
    authConfig?: AuthConfigInMeta;
}
export interface ResourceConfigInMeta {
    resourceIdKey?: string;
    resourceId?: (route: Route) => string;
    resourceType: APP_TYPE;
}
export interface AuthConfigInMeta {
    isRecorvery?: boolean;
    isCheckResource?: boolean;
    useLocalStorageWhenCheckResource?: boolean;
}
declare class SpaceManager {
    private projectInfo;
    private updateProjectPromise;
    private router;
    private curRoute;
    private listPageProjectId?;
    private getProjectIdByResource;
    private saveListProjectId;
    private getListProjectIdForNavigationGuard;
    private getProjectIdByResourceForNavigationGuard;
    private updateProjectIdForNavigationGuard;
    wrapRouter(router: VueRouter): void;
    isInPersonalSpace(): boolean;
    setProjectId(projectId: number): true | undefined;
    getProjectId(): number;
    getProjectInfo(): {
        id: number;
    };
    updateProjectIdByResourceId(resourceId: string, appType: APP_TYPE): Promise<void>;
    awaitReady(): Promise<void>;
    getProjectIdAsync(): Promise<number>;
}
declare const _default: SpaceManager;
export default _default;
