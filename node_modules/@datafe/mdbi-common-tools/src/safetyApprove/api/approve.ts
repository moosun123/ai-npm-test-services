import request from './request'
import { APPROVE_ACTION } from '../constant'

interface Resource {
  /** 资源类型 */
  appType: string
  /** 鉴权子类型, 例如:RESULT(查询结果，下载时id设置成LID), FILTER（筛选器）,FILTER_VALUE（行列级）,DATAPUSH（数据推送）,SCHEDULE（调度）,TAB,COMPONENT（组件，例如Dashboard的component）,COMPONENT_COLUMN(组件细粒度（列）)， */
  subType: string
  /** 资源ID */
  id: string
  /** 额外信息，例如dashboard的行列级鉴权，需要将dashboard的config传入 */
  extra?: string
}

interface AuthAction {
  /** 鉴权类型:编辑,查看,权限管理员,安全负责人,接收 */
  authType?: string
  /** 用户动作类型,日志或者是扩展使用:RECEIVE（推送接收）,MOVE(excel的移动操作),OUTBASE(出仓),CREATE,DELETE,EXECUTION,VIEW,HANDOVER,EDIT,KILL,GO_ONLINE,GO_OFFLINE,AUTH_APPLY,AUTH_MANAGE,AUTH_VIEW_GIVE,AUTH_EDIT_GIVE,ROLLBACK */
  userAction?: APPROVE_ACTION
}

export interface AuthParams {
  mis: string
  resources: Resource
  authAction: AuthAction
}

export interface AuthResult {
  permissionType: string
  extra: string
}
interface Res {
  code: number
  message: string
}

interface ApproveStatusRes extends Res {
  data: AuthResult[]
}

interface ApplyRes extends Res {
  data: {
    workflowUrl: string
    status: number
  }
}

/** 判断当前审批状态 */
export function getApproveResult(params: AuthParams[]): Promise<ApproveStatusRes> {
  return request.post('/safe/auth/doAuth/byAction', params)
}

/** 去提交审批 */
export function toApply(params: AuthParams[]): Promise<ApplyRes> {
  return request.post('/approveLink/submit', params)
}
