import request from './config/axios.config'
import { GetSafemetaInfoRes } from './safemeta'

interface Resource {
  // dashbaord:app::id
  // -- dashboard::filter::filterid
  // -- dashboard::tab::tabId
  // --- dashboard::component:componetid
  // ---- dashboard::datasoource::datesetId::version
  // 资源类型，例如:DASHBOARD,SQL,MONITOR等，大写
  appType: string
  // # 鉴权子类型,例如:RESULT(查询结果，下载时id设置成LID), FILTER（筛选器）,FILTER_VALUE（行列级）,DATAPUSH（数据推送）,SCHEDULE（调度）,TAB,COMPONENT（组件，例如Dashboard的component）,COMPONENT_COLUMN(组件细粒度（列）)，
  // # TABLE（库表）,DATASET(接完之后统一datasaet),DATASOURCE（数据源，比如SQL） <- 这三类走的都是库表鉴权
  subType: string
  // # 资源ID, id::version 如dashboard发起查询时，传入组件使用的SQLID以及SQL版本即可
  id?: string
  // # 集群（dsName, hostGroup）
  hostGroup?: string
  // # 数据源key
  key?: string
  // # 查询引擎
  engine?: string
  // # SQL就是具体的SQL语句
  statement?: string
  // # 额外信息，例如dashboard的行列级鉴权，需要将dashboard的config传入
  extra?: string
  // # 子资源鉴权
  subResources?: Resource[]
}

interface AuthAction {
  // # 鉴权类型:编辑,查看,权限管理员,安全负责人,接收
  authType?: string
  // # 用户动作类型,日志或者是扩展使用:RECEIVE（推送接收）,MOVE(excel的移动操作),OUTBASE(出仓),CREATE,DELETE,EXECUTION,VIEW,HANDOVER,EDIT,KILL,GO_ONLINE,GO_OFFLINE,AUTH_APPLY,AUTH_MANAGE,AUTH_VIEW_GIVE,AUTH_EDIT_GIVE,ROLLBACK
  userAction?: string
}

export interface AuthParams {
  mis: string
  projectId: number
  /** 0为个人空间, 其他传项目组ID */
  targetProjectId?: number
  /** 迁移时的目标项目组 */
  resources: Resource
  authAction: AuthAction
  online?: boolean
}

interface PermissionValue {
  name: string
  value: string
  isAll: number
  items: PermissionValue[]
}

interface TableAuthResult {
  // # 数据源类型
  dsType?: string
  // # key
  ds?: string
  // # 数据库
  db?: string
  // # 表
  table?: string
  // # 字段
  col?: string[]
  // # 行列级权限
  rowCtrlMsg?: string
  // # 河图申请链接
  url?: string
}

export interface AuthResult {
  // # 鉴权结果顺序与入参resource一一对应
  // # 是否有权限，有权限：true，无权限：false
  hasPermission: boolean
  // # 权限类型：ALL，PART, 全部权限还是部分权限
  permissionType?: string
  // # 如果有部分权限，哪部分有权限
  permissionValues?: PermissionValue
  // # 权限类型 编辑，查看，接收，分发等
  permissionDetail?: string[]
  // # 将军令resourceCode
  authCode?: string
  // # 所需应用权限：编辑，查看，接收，资源管理员，权限管理员，安全负责人
  solution?: string
  // # 底表鉴权方案
  tableAuthResults?: TableAuthResult[]
  extra?: string
  subAuthResults?: AuthResult[]
  safeMetaResult?: GetSafemetaInfoRes
}

export function actionAuth(params: AuthParams[]): Promise<{
  code: number
  message: string
  data?: AuthResult[]
}> {
  return request.post('/safe/auth/doAuth/byAction', params)
}

export function fetchAuthUser(
  params: Array<{
    resources: Resource
    authAction: AuthAction
  }>,
): Promise<{
  code: number
  message: string
  data?: Array<{
    resource: Resource
    users: Array<{
      userId: number
      misId: string
      userName: string
      role: string
    }>
  }>
}> {
  return request.post('/safe/auth/queryUser', params)
}
