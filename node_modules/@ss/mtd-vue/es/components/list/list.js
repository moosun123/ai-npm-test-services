import _defineProperty from 'babel-runtime/helpers/defineProperty';
import { CONFIG_PROVIDER, getPrefixCls, getIconCls, getSize } from '@ss/mtd-vue/es/utils/config';
import MtdIconButton from '@ss/mtd-vue/es/components/icon-button';

var __vue_render__ = function __vue_render__() {
  var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('div', _vm._g({ class: _vm.wrapperCls }, _vm.$listeners), [_vm._t("default"), !_vm.loading ? _vm._t("loadMore") : _c('div', { class: _vm.prefix + "-loading" }, [_c('mtd-icon-button', { attrs: { "icon": _vm.iconPrefix('loading') } })], 1)], 2);
};
var __vue_staticRenderFns__ = [];

export default {
  render: __vue_render__,

  staticRenderFns: __vue_staticRenderFns__,

  name: 'MtdList',
  components: {
    MtdIconButton: MtdIconButton
  },
  props: {
    size: {
      type: String,
      default: 'normal'
    },
    loading: {
      type: Boolean,
      default: false
    }
  },
  inject: {
    config: {
      from: CONFIG_PROVIDER,
      default: {
        getPrefixCls: getPrefixCls,
        getIconCls: getIconCls,
        getSize: getSize
      }
    }
  },
  computed: {
    prefix: function prefix() {
      return this.config.getPrefixCls('list');
    },
    _size: function _size() {
      return this.config.getSize(this);
    },
    iconPrefix: function iconPrefix() {
      return this.config.getIconCls;
    },
    wrapperCls: function wrapperCls() {
      return ['' + this.prefix, _defineProperty({}, this.prefix + '-' + this._size, this._size)];
    }
  }
};