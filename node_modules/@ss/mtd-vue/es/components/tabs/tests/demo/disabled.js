import _regeneratorRuntime from 'babel-runtime/regenerator';
import _asyncToGenerator from 'babel-runtime/helpers/asyncToGenerator';
import Tabs from '@ss/mtd-vue/es/components/tabs';
import TabPane from '@ss/mtd-vue/es/components/tab-pane';
import { triggerClick, waitImmediate } from '@test/util';
var __vue_render__ = function __vue_render__() {
  var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('mtd-tabs', { ref: "tabs", model: { value: _vm.activeName1, callback: function callback($v) {
        _vm.activeName1 = $v;
      }, expression: "activeName1" } }, [_c('mtd-tab-pane', { attrs: { "label": "Tab1", "value": "Tab1" } }, [_c('div', [_vm._v("示例内容: "), _c('br'), _vm._v(" 明月几时有？把酒问青天。不知天上宫阙，今夕是何年。 ")])]), _c('mtd-tab-pane', { attrs: { "label": "Tab2", "value": "Tab2" } }, [_c('div', [_vm._v("示例内容: "), _c('br'), _vm._v(" 我欲乘风归去，又恐琼楼玉宇，高处不胜寒。起舞弄清影，何似在人间！ ")])]), _c('mtd-tab-pane', { attrs: { "label": "Tab3", "value": "Tab3" } }, [_c('div', [_vm._v("示例内容: "), _c('br'), _vm._v(" 转朱阁，低绮户，照无眠。 不应有恨，何事长向别时圆？ ")])]), _c('mtd-tab-pane', { attrs: { "label": "Tab4", "value": "Tab4", "disabled": "" } }, [_c('div', [_vm._v("示例内容: "), _c('br'), _vm._v(" 人有悲欢离合，月有阴晴圆缺，此事古难全。但愿人长久，千里共婵娟。 ")])])], 1);
};
var __vue_staticRenderFns__ = [];

export default {
  render: __vue_render__,

  staticRenderFns: __vue_staticRenderFns__,

  components: {
    MtdTabs: Tabs,
    MtdTabPane: TabPane
  },
  data: function data() {
    return {
      activeName1: 'Tab1'
    };
  },

  methods: {
    doTest: function doTest(done) {
      var _this = this;

      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {
        var tab;
        return _regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return waitImmediate();

              case 2:
                // tab4 is disabled tab
                tab = _this.$el.querySelectorAll('.mtd-tabs-item')[3];

                expect(tab).to.be.not.undefined();
                triggerClick(tab, true, true);
                waitImmediate();
                // not change
                expect(_this.activeName1).to.be.eql('Tab1');
                done();

              case 8:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, _this);
      }))();
    }
  }
};