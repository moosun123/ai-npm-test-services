import _Array$from from "babel-runtime/core-js/array/from";
var __vue_render__ = function __vue_render__() {
  var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('mtd-config-provider', { attrs: { "prefix-cls": "xx", "icon-prefix-cls": "xxicon" } }, [_c('mtd-config-provider', { ref: "p", attrs: { "prefix-cls": "m" } }, [_c('mtd-button', { staticClass: "test-config-btn" }, [_c('mtd-icon', { staticClass: "icon", attrs: { "name": "search" } }), _vm._v(" xxxxxx ")], 1)], 1)], 1);
};
var __vue_staticRenderFns__ = [];

export default {
  render: __vue_render__,

  staticRenderFns: __vue_staticRenderFns__,

  methods: {
    doTest: function doTest(done) {
      var el = this.$el.querySelector('.test-config-btn');
      expect(el, 'should mounted button element').to.be.not.eql(null);
      var classes = _Array$from(el.classList);
      expect(classes, 'should use Closest prefixCls').to.be.include('m-btn');

      var icon = this.$el.querySelector('.icon');
      expect(icon, 'should has icon').to.be.not.eql(null);
      var iconClasses = _Array$from(icon.classList);
      expect(iconClasses).to.be.include('xxicon-search');
      done();
    }
  }
};