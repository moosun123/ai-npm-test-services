var __vue_render__ = function __vue_render__() {
  var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('label', { staticClass: "mtd-navbar-search", class: {
      'mtd-navbar-item-right': _vm.align === 'right',
      'mtd-navbar-search-active': _vm.active
    } }, [_c('div', { staticClass: "mtd-navbar-search-group" }, [_c('input', _vm._b({ staticClass: "mtd-navbar-search-input", domProps: { "value": _vm.value }, on: { "input": _vm.handleSearchInput, "blur": _vm.handleInputBlur, "focus": _vm.handleInputFocus, "keyup": function keyup($event) {
        if (!$event.type.indexOf('key') && _vm._k($event.keyCode, "enter", 13, $event.key, "Enter")) {
          return null;
        }return _vm.handleSearch($event);
      } } }, 'input', _vm.$attrs, false)), _c('i', { staticClass: "mtdicon mtdicon-search", on: { "click": _vm.handleIconClick } })])]);
};
var __vue_staticRenderFns__ = [];

export default {
  render: __vue_render__,

  staticRenderFns: __vue_staticRenderFns__,

  name: 'MtdNavbarSearch',
  props: {
    value: [String, Number],
    align: {
      type: String,
      default: 'left',
      validator: function validator(v) {
        return ['left', 'right'].indexOf(v) > -1;
      }
    }
  },
  data: function data() {
    return {
      active: !!this.value
    };
  },

  methods: {
    handleSearchInput: function handleSearchInput(e) {
      this.$emit('input', e.target.value);
    },
    handleInputBlur: function handleInputBlur() {
      this.active = !!this.value;
    },
    handleInputFocus: function handleInputFocus() {
      this.active = true;
    },
    handleSearch: function handleSearch(e) {
      var value = e.target.value;

      this.$emit('search', value);
    },
    handleIconClick: function handleIconClick(e) {
      this.$emit('search', this.value);
    }
  }
};