import NavLink from '@ss/mtd-vue/es/components/navbar-link';
import Popover from '@ss/mtd-vue/es/components/popover';
// todo 增加点击空白区域关闭下拉
var __vue_render__ = function __vue_render__() {
  var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('popover', _vm._b({ ref: "group", staticClass: "mtd-navbar-item", class: {
      'mtd-navbar-item-right': _vm.align === 'right',
      'mtd-navbar-item-active': _vm.active || _vm.$slots.dropdown && _vm.visible
    }, attrs: { "disabled": !_vm.$slots.dropdown, "trigger": _vm.trigger, "show-arrow": _vm.showArrow, "popper-class": _vm.dropdownCls, "visible": _vm.visible, "placement": _vm.placement }, on: { "input": _vm.updateVisible } }, 'popover', _vm.popperProps, false), [_c('nav-link', _vm._b({ ref: "item", staticClass: "mtd-navbar-item-link", class: _vm.linkClass, attrs: { "route": _vm.route }, on: { "click": _vm.handleLinkClick } }, 'nav-link', _vm.$attrs, false), [_vm._t("default")], 2), _c('div', { attrs: { "slot": "content" }, slot: "content" }, [_vm._t("dropdown")], 2)], 1);
};
var __vue_staticRenderFns__ = [];

export default {
  render: __vue_render__,

  staticRenderFns: __vue_staticRenderFns__,

  name: 'MtdNavbarItem',
  components: {
    NavLink: NavLink,
    Popover: Popover
  },
  inheritAttrs: false,
  props: {
    trigger: {
      type: String,
      default: 'click'
    },
    align: {
      type: String,
      default: 'left',
      validator: function validator(v) {
        return ['left', 'right'].indexOf(v) > -1;
      }
    },
    linkClass: String,
    visible: {
      type: Boolean,
      default: false
    },
    active: {
      type: Boolean,
      default: false
    },
    showArrow: {
      type: Boolean,
      default: false
    },
    popperProps: Object,
    dropdownClass: {
      type: String,
      default: ''
    },
    route: [String, Object],
    placement: String
  },
  computed: {
    dropdownCls: function dropdownCls() {
      return 'mtd-navbar-item-dropdown ' + this.dropdownClass;
    }
  },
  methods: {
    updateVisible: function updateVisible(v) {
      this.$emit('update:visible', v);
    },
    handleLinkClick: function handleLinkClick(e) {
      this.$emit('click', e);
    }
  }
};