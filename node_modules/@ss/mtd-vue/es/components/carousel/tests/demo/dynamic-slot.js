import _regeneratorRuntime from 'babel-runtime/regenerator';
import _asyncToGenerator from 'babel-runtime/helpers/asyncToGenerator';
/**
 * File description
 * @author zhongjiahao
 * @date   2021/6/10
 */
import Carousel from '../../carousel';
import CarouselItem from '../../carousel-item';
import { waitImmediate } from '@test/util';

var __vue_render__ = function __vue_render__() {
  var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('div', { attrs: { "id": "dynamic-slot" } }, [_c('mtd-carousel', _vm._l(_vm.items, function (item) {
    return _c('mtd-carousel-item', { key: item }, [_c('div', { style: _vm.itemStyle }, [_vm._v(" " + _vm._s(item) + " ")])]);
  }), 1)], 1);
};
var __vue_staticRenderFns__ = [];

export default {
  render: __vue_render__,

  staticRenderFns: __vue_staticRenderFns__,

  name: 'DynamicSlot',
  components: {
    MtdCarousel: Carousel,
    MtdCarouselItem: CarouselItem
  },
  data: function data() {
    return {
      items: [],
      itemStyle: {
        height: '240px',
        lineHeight: '240px',
        textAlign: 'center',
        color: 'white',
        backgroundColor: '#5D6EAC',
        fontSize: '30px',
        fontWeight: '900'
      }
    };
  },

  methods: {
    doTest: function doTest() {
      var _this = this;

      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {
        var root, activeDom;
        return _regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return waitImmediate();

              case 2:
                _this.items = [1, 2, 3, 4];
                _context.next = 5;
                return waitImmediate();

              case 5:
                root = document.getElementById('dynamic-slot');
                activeDom = root.querySelectorAll('.mtd-carousel-item-active');

                expect(activeDom.length).to.equal(1);

              case 8:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, _this);
      }))();
    }
  }
};