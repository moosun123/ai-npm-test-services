import _regeneratorRuntime from 'babel-runtime/regenerator';
import _asyncToGenerator from 'babel-runtime/helpers/asyncToGenerator';
import InputNumber from '../../index';
import { waitImmediate, setInputValue } from '@test/util';

var __vue_render__ = function __vue_render__() {
  var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('InputNumber', { ref: "input", attrs: { "allow-empty": _vm.allowEmpty, "precision": 1 }, model: { value: _vm.value, callback: function callback($v) {
        _vm.value = $v;
      }, expression: "value" } });
};
var __vue_staticRenderFns__ = [];

export default {
  render: __vue_render__,

  staticRenderFns: __vue_staticRenderFns__,

  components: {
    InputNumber: InputNumber
  },
  data: function data() {
    return {
      value: 1,
      allowEmpty: true
    };
  },

  methods: {
    doTest: function doTest() {
      var _this = this;

      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {
        var input;
        return _regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _this.value = 1;
                _context.next = 3;
                return waitImmediate();

              case 3:
                input = _this.$el.querySelector('input');

                input.focus();
                setInputValue(input, '');
                input.blur();
                _context.next = 9;
                return waitImmediate();

              case 9:
                expect(_this.value).to.be.eql(null);

              case 10:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, _this);
      }))();
    }
  }
};