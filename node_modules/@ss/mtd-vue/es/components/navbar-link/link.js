import _defineProperty from 'babel-runtime/helpers/defineProperty';
import _extends from 'babel-runtime/helpers/extends';

export default {
  name: 'MtdNavLink',
  inheritAttrs: false,
  props: {
    route: [Object, String],
    disabled: Boolean
  },
  methods: {
    handleClick: function handleClick(event) {
      if (this.disabled) {
        event.preventDefault();
        event.stopPropagation();
        return;
      }
      this.$emit('click', event);
    },
    routeToItem: function routeToItem(item, onError) {
      var route = item.route;
      try {
        this.$router.push(route, function () {}, onError);
      } catch (e) {
        console.error(e);
      }
    }
  },
  render: function render(h) {
    var route = this.route;

    var isRoute = !!route;
    var Tag = isRoute ? 'router-link' : 'a';
    var on = {
      click: this.handleClick
    };
    var attrs = _extends({
      to: route
    }, this.$attrs);
    if (isRoute && this.disabled) {
      /**
       * to disabled router link
       * see https://github.com/vuejs/vue-router/issues/916
       * */
      attrs.event = '';
      delete attrs.disabled;
    }
    return h(Tag, _defineProperty({
      class: 'mtd-nav-link',
      attrs: attrs
    }, isRoute ? 'nativeOn' : 'on', on), this.$slots.default);
  }
};