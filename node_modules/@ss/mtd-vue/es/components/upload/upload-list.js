import MtdProgress from '@ss/mtd-vue/es/components/progress';
import Icon from '@ss/mtd-vue/es/components/icon';

var __vue_render__ = function __vue_render__() {
  var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('transition-group', { directives: [{ name: "show", rawName: "v-show", value: _vm.files && _vm.files.length, expression: "files && files.length" }], class: [_vm.prefix + "-list", _vm.prefix + "-list-" + _vm.listType, { 'is-disabled': _vm.disabled }], attrs: { "tag": "ul", "name": _vm.prefix + "-list" } }, _vm._l(_vm.files, function (file) {
    var _obj, _obj$1, _obj$2;
    return _c('li', { key: file.uid, class: [_vm.prefix + "-list-item", _vm.prefix + "-list-item-" + file.status, _vm.focusing ? 'focusing' : ''], attrs: { "tabindex": "0" }, on: { "keydown": function keydown($event) {
          if (!$event.type.indexOf('key') && _vm._k($event.keyCode, "delete", [8, 46], $event.key, ["Backspace", "Delete", "Del"])) {
            return null;
          }!_vm.disabled && _vm.$emit('remove', file);
        }, "focus": function focus($event) {
          _vm.focusing = true;
        }, "blur": function blur($event) {
          _vm.focusing = false;
        }, "click": function click($event) {
          _vm.focusing = false;
        } } }, [file.status !== 'uploading' && file.status !== 'fail' && _vm.listType === 'picture-card' ? _c('img', { class: _vm.prefix + "-list-item-thumbnail", attrs: { "src": file.url, "alt": "" } }) : _vm._e(), file.status === 'fail' && _vm.listType === 'picture-card' ? _c('div', { class: _vm.prefix + "-list-item-thumbnail picture-load-fail" }, [_c('svg', { staticClass: "icon", attrs: { "t": "1548664812040", "viewBox": "0 0 1024 1024", "width": "100%", "height": "100%" } }, [_c('path', { attrs: { "fill": "#B5BBD1", "d": "M776 328m-72 0a72 72 0 1 0 144 0 72 72 0 1 0-144 0Z", "p-id": "5307" } }), _c('path', { attrs: { "fill": "#B5BBD1", "d": "M999.904 116.608a32 32 0 0 0-21.952-10.912l-456.192-31.904a31.552 31.552 0 0 0-27.2 11.904l-92.192 114.848a32 32 0 0 0 0.672 40.896l146.144 169.952-147.456 194.656 36.48-173.376a32 32 0 0 0-11.136-31.424L235.616 245.504l79.616-125.696a32 32 0 0 0-29.28-49.024l-240.192 16.768a32 32 0 0 0-29.696 34.176l55.808 798.016a32.064 32.064 0 0 0 34.304 29.696l176.512-13.184c17.632-1.312 30.848-16.672 29.504-34.272s-16.576-31.04-34.304-29.536l-144.448 10.784-6.432-92.512 125.312-12.576a32 32 0 0 0 28.672-35.04 32.16 32.16 0 0 0-35.04-28.672l-123.392 12.416L82.144 149.184l145.152-10.144-60.96 96.224a32 32 0 0 0 6.848 41.952l198.4 161.344-58.752 279.296a30.912 30.912 0 0 0 0.736 14.752 31.68 31.68 0 0 0 1.408 11.04l51.52 154.56a31.968 31.968 0 0 0 27.456 21.76l523.104 47.552a32.064 32.064 0 0 0 34.848-29.632L1007.68 139.84a32.064 32.064 0 0 0-7.776-23.232z m-98.912 630.848l-412.576-39.648a31.52 31.52 0 0 0-34.912 28.768 32 32 0 0 0 28.8 34.912l414.24 39.808-6.272 89.536-469.728-42.72-39.584-118.72 234.816-310.016a31.936 31.936 0 0 0-1.248-40.192L468.896 219.84l65.088-81.056 407.584 28.48-40.576 580.192z" } })])]) : _vm._e(), _c('a', { class: _vm.prefix + "-list-item-name", on: { "click": function click($event) {
          return _vm.handleClick(file);
        } } }, [_c('Icon', { attrs: { "name": "link-o" } }), _vm._v(_vm._s(file.name) + " ")], 1), _vm.listType === 'text' && !_vm.disabled ? _c('label', { class: _vm.prefix + "-list-item-status-text" }, [_c('i', { class: (_obj = {}, _obj[_vm.getIconCls('item-text')] = file.status === 'success', _obj[_vm.getIconCls('fail')] = file.status === 'fail', _obj[_vm.getIconCls('error-circle')] = true, _obj), on: { "click": function click($event) {
          return _vm.$emit('remove', file);
        } } }), _c('i', { class: (_obj$1 = {}, _obj$1[_vm.getIconCls('item-text-hover')] = true, _obj$1[_vm.getIconCls('refresh-o')] = file.status === 'fail', _obj$1[_vm.getIconCls('error-circle')] = file.status !== 'fail', _obj$1), on: { "click": function click() {
          file.status === 'fail' ? _vm.$emit('retry', file) : _vm.$emit('remove', file);
        } } }), file.status !== 'fail' && _vm.showFileDown ? _c('a', { class: _vm.getIconCls('download-o'), attrs: { "href": file.url, "download": "", "target": "_blank" }, on: { "click": function click($event) {
          return _vm.handleDownloadClick($event, file);
        } } }) : _vm._e()]) : _vm._e(), _vm.listType === 'picture-card' && file.status === 'uploading' ? _c('span', { class: _vm.prefix + "-list-item-text" }, [_vm._v(" 文件上传中...")]) : _vm._e(), file.status === 'uploading' ? _c('mtd-progress', { attrs: { "type": "line", "stroke-width": _vm.listType === 'picture-card' ? 4 : 2, "percentage": _vm.parsePercentage(file.percentage) } }) : _vm._e(), _vm.listType === 'picture-card' ? _c('span', { class: (_obj$2 = {}, _obj$2[_vm.prefix + "-list-item-actions"] = true, _obj$2[_vm.prefix + "-list-item-fail"] = file.status === 'fail', _obj$2) }, [_vm.handlePreview && _vm.listType === 'picture-card' && file.status !== 'fail' ? _c('span', { class: _vm.prefix + "-list-item-preview", on: { "click": function click($event) {
          return _vm.handlePreview(file);
        } } }, [_c('Icon', { attrs: { "name": "visibility-on-o" } })], 1) : _vm._e(), _vm.listType === 'picture-card' && file.status === 'fail' && !_vm.disabled ? _c('span', { class: _vm.prefix + "-list-item-retry", on: { "click": function click($event) {
          return _vm.$emit('retry', file);
        } } }, [_c('Icon', { attrs: { "name": "refresh-o" } })], 1) : _vm._e(), !_vm.disabled ? _c('span', { class: _vm.prefix + "-list-item-delete", on: { "click": function click($event) {
          return _vm.$emit('remove', file);
        } } }, [_c('Icon', { attrs: { "name": "delete-o" } })], 1) : _vm._e()]) : _vm._e()], 1);
  }), 0);
};
var __vue_staticRenderFns__ = [];

export default {
  render: __vue_render__,

  staticRenderFns: __vue_staticRenderFns__,

  name: 'MtdUploadList',

  components: {
    MtdProgress: MtdProgress,
    Icon: Icon
  },

  props: {
    prefix: {
      type: String,
      required: true
    },
    getIconCls: {
      type: Function,
      required: true
    },
    files: {
      type: Array,
      default: function _default() {
        return [];
      }
    },
    disabled: {
      type: Boolean,
      default: false
    },
    handlePreview: Function,
    handleDownload: Function,
    listType: String,
    showFileDown: {
      type: Boolean,
      default: false
    }
  },

  data: function data() {
    return {
      focusing: false
    };
  },

  methods: {
    parsePercentage: function parsePercentage(val) {
      return parseInt(val, 10);
    },
    handleClick: function handleClick(file) {
      this.handlePreview && this.handlePreview(file);
    },
    handleDownloadClick: function handleDownloadClick($event, file) {
      this.handleDownload && this.handleDownload($event, file);
    }
  }
};