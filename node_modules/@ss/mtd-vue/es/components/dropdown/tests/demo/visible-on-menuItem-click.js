// trigger 为 click 时，点击 menu-item 不关闭下拉面板
var __vue_render__ = function __vue_render__() {
  var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('mtd-dropdown', { attrs: { "visible-on-menu-item-click": _vm.visibleOnMenuItemClick }, model: { value: _vm.visible, callback: function callback($v) {
        _vm.visible = $v;
      }, expression: "visible" } }, [_c('mtd-button', { attrs: { "type": "text" } }, [_c('span', { staticStyle: { "margin-right": "4px" } }, [_vm._v("click")]), _c('i', { staticClass: "mtdicon mtdicon-down" })]), _c('mtd-dropdown-menu', { attrs: { "slot": "dropdown" }, slot: "dropdown" }, [_c('mtd-dropdown-menu-item', { ref: "item", on: { "click": _vm.handleClick } }, [_vm._v("计算")]), _c('mtd-dropdown-menu-item', [_vm._v("网络")]), _c('mtd-dropdown-menu-item', [_vm._v("存储")]), _c('mtd-dropdown-menu-item', [_vm._v("数据库")])], 1)], 1);
};
var __vue_staticRenderFns__ = [];

export default {
  render: __vue_render__,

  staticRenderFns: __vue_staticRenderFns__,

  data: function data() {
    return {
      visible: true,
      clickItem: false,
      visibleOnMenuItemClick: false
    };
  },

  methods: {
    handleClick: function handleClick() {
      this.clickItem = true;
    },
    doTest: function doTest(done, _ref) {
      var _this = this;

      var triggerClick = _ref.triggerClick;

      var item = this.$refs.item.$el;
      triggerClick(item);
      expect(this.clickItem).to.be.true();
      expect(this.visible).to.be.false();

      this.visibleOnMenuItemClick = true;
      this.visible = true;
      this.$nextTick(function () {
        triggerClick(item);
        expect(_this.visible, 'visible should be true when visibleOnMenuItemClick is true').to.be.true();
        done();
      });
    }
  }
};