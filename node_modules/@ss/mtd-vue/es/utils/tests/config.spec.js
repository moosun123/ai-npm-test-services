import _regeneratorRuntime from 'babel-runtime/regenerator';
import _asyncToGenerator from 'babel-runtime/helpers/asyncToGenerator';
import _Array$from from 'babel-runtime/core-js/array/from';
import _extends from 'babel-runtime/helpers/extends';
import { expect } from 'chai';
import Message from '@ss/mtd-vue/es/components/message';
import Modal from '@ss/mtd-vue/es/components/modal';
import { mount, destroyVM, waitImmediate } from '@test/util';
import { config, getConfig, getPrefix, getIconPrefix, getPrefixCls, getIconCls } from '../config';

describe("Global Config Function", function () {
  var _DEFAULT_ = _extends({}, getConfig());

  afterEach(function () {
    config(_DEFAULT_);
    Message.closeAll();
  });

  it("must override by custom", function () {
    config({
      prefixCls: 'xx',
      iconPrefixCls: 'xxicon'
    });
    expect(getPrefix()).to.be.eql('xx');
    expect(getIconPrefix()).to.be.eql('xxicon');
    expect(getPrefixCls('button')).to.be.eql('xx-button');
    expect(getIconCls('search')).to.be.eql('xxicon xxicon-search');
  });

  it("should render by custom prefixCls", function () {
    config({
      prefixCls: 'xx',
      iconPrefixCls: 'xxicon'
    });
    Message({
      message: '这是一条正常的消息',
      type: 'info',
      className: 'test-config-message'
    });
    var el = document.querySelector('.test-config-message');
    expect(el).to.be.not.eql(null);
    var classes = _Array$from(el.classList);
    expect(classes).to.be.include('xx-message');
  });
  describe("popup component", function () {
    var el = void 0;
    var vm = void 0;
    function getPopupContainer() {
      return el;
    }
    before(function () {
      el = document.createElement('div');
      document.body.append(el);
    });

    afterEach(function () {
      destroyVM(vm);
    });

    after(function () {
      document.body.remove(el);
    });

    it("Message Component should append in custom el", function () {
      // 原型链上的方法
      config({
        getPopupContainer: getPopupContainer
      });
      Message({
        message: '这是一条正常的消息',
        type: 'info',
        className: 'test-config-message'
      });
      var m = el.querySelector('.test-config-message');
      expect(m, 'should append in custom dom').to.be.not.eql(null);
    });

    it("Modal Component should append in custom el", _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {
      var modal;
      return _regeneratorRuntime.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              config({
                getPopupContainer: getPopupContainer
              });
              vm = mount(Modal, { props: { visible: true }, attrs: { visible: true } });
              _context.next = 4;
              return waitImmediate();

            case 4:
              modal = el.querySelector('.mtd-modal');

              expect(modal).to.be.not.eql(null);

            case 6:
            case 'end':
              return _context.stop();
          }
        }
      }, _callee, this);
    })));
  });
});