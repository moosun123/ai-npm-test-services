"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tree = {
    type: 'normal',
    prefix: 'm-tree',
    name: 'mtd-tree',
    props: [
        {
            key: 'node-class',
            default: '',
            detail: 'node-class',
            documentation: '节点的 class。类型：string/ function (node, data): string',
            options: [],
        },
        {
            key: 'expand-icon',
            default: '',
            detail: 'expand-icon',
            documentation: '展开图标。类型：string',
            options: [],
        },
        {
            key: 'data',
            default: 'treeData',
            detail: 'data',
            documentation: '展示数据。类型：array',
            options: [],
        },
        {
            key: 'checkable',
            isBoolean: true,
            detail: 'checkable',
            documentation: '节点前添加 Checkbox 复选框。类型：boolean',
            options: [],
        },
        {
            key: 'checked-keys',
            default: 'checkedKeyList',
            detail: 'checked-keys',
            documentation: '选中的节点。类型：string[],',
            options: [],
        },
        {
            key: 'check-strictly',
            isBoolean: true,
            detail: 'check-strictly',
            documentation: '勾选节点复选框是否完全受控（true 时父子节点选中状态不再关联）。类型：boolean',
            options: [],
        },
        {
            key: 'checked-strategy',
            default: 'parent',
            detail: 'checked-strategy',
            documentation: '定义选中时回填的方式。类型：string。默认all',
            options: [
                {
                    value: 'all',
                    detail: 'all',
                    documentation: '返回所有选中的节点'
                },
                {
                    value: 'parent',
                    detail: 'parent',
                    documentation: '父子节点都选中时只返回父节点'
                },
                {
                    value: 'child',
                    detail: 'child',
                    documentation: '父子节点都选中时只返回子节点'
                }
            ],
        },
        {
            key: 'selected-keys',
            default: 'selectedKeyList',
            detail: 'selected-keys',
            documentation: '设置选中的树节点。类型：string[]',
            options: [],
        },
        {
            key: 'selectable',
            isBoolean: true,
            detail: 'selectable',
            documentation: '设置节点是否可被选中。类型：boolean',
            options: [],
        },
        {
            key: 'expanded-keys',
            default: 'expandKeyList',
            detail: 'expanded-keys',
            documentation: '展开的节点。类型：string[]',
            options: [],
        },
        {
            key: 'default-expand-all',
            default: 'defaultExpandAll',
            detail: 'default-expand-all',
            documentation: '是否默认展开所有节点',
            options: [],
        },
        {
            key: 'load-data',
            default: '',
            detail: 'load-data',
            documentation: '当 node isLeaf 为 true 时，并且 children 为空时，点击则调用此方法， 需要使用第二个参数 resolve，来表明获取到的数据及状态。类型：function (node, resolve)',
            options: [],
        },
        {
            key: 'loaded-keys',
            default: 'loadedKeyList',
            detail: 'loaded-keys',
            documentation: '已经加载的节点，需要配合 loadData 使用。类型：string[]',
            options: [],
        },
        {
            key: 'expand-on-click-node',
            isBoolean: true,
            detail: 'expand-on-click-node',
            documentation: '是否点击整行展开。类型：boolean',
            options: [],
        },
        {
            key: 'check-on-click-node',
            isBoolean: true,
            detail: 'check-on-click-node',
            documentation: '是否点击整行选择节点，只有当 checkable 为 true 时生效。类型：boolean',
            options: [],
        },
        {
            key: 'node-key',
            default: '',
            detail: 'node-key',
            documentation: '每个树节点用来作为唯一标识的属性，整棵树应该是唯一的。类型：string',
            options: [],
        },
        {
            key: 'indent',
            default: '20',
            detail: 'indent',
            documentation: '相邻级节点间的水平缩进，单位为像素。类型：number',
            options: [],
        },
        {
            key: 'disabled',
            isBoolean: true,
            detail: 'disabled',
            documentation: '是否禁用。类型：boolean',
            options: [],
        },
        {
            key: 'empty-text',
            default: '',
            detail: 'empty-text',
            documentation: '空数据时显示的内容，也可以用 empty 插槽。类型：string',
            options: [],
        },
    ],
    events: [
        {
            key: 'update:expanded-keys',
            detail: 'update:expanded-keys',
            documentation: '展开发生变化时触发。参数：(expandedKeys)',
        },
        {
            key: 'toggle-expand',
            detail: 'toggle-expand',
            documentation: 'update:expanded-keys 事件后触发, 其中参数 node 为当前触发的节点信息，  expanded 为当前展开状态, nodes 则为当前展开的全部节点信息。参数：(expandedKeys, { node, expanded, nodes })',
        },
        {
            key: 'update:checked-keys',
            detail: 'update:checked-keys',
            documentation: '选中发生变化时。参数：(checkedKeys)',
        },
        {
            key: 'toggle-checked',
            detail: 'toggle-checked',
            documentation: 'update:checked-keys 事件后触发。参数 checkedKeys 同 update:checked-keys。 node 为当前节点信息, checked 为当前操作是否为选中, nodes 则根据 checked-strategy 属性值获取当前选中的所有节点。参数：(checkedKeys, { node, checked, nodes })',
        },
        {
            key: 'node-click',
            detail: 'node-click',
            documentation: '点击节点时触发。参数：(data, node)',
        },
        {
            key: 'node-expand',
            detail: 'node-expand',
            documentation: '节点被展开时触发的事件。参数：(data, node)',
        },
    ],
    detail: 'Tree',
    documentation: `单列内，多层级的数据可视化展示，结构包括根节点、节点、叶子等层级。`,
    snippets: {
        tag: 'mtd-tree',
        attrs: {
            ':data': 'treeData'
        }
    },
    path: '/#/components/tree',
};
exports.default = tree;
//# sourceMappingURL=tree.js.map
