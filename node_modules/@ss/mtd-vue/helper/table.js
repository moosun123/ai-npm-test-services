"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.table = {
    type: 'normal',
    prefix: 'm-table',
    name: 'mtd-table',
    props: [
        {
            key: 'data',
            default: 'tableData',
            detail: 'data',
            documentation: '显示的数据。类型：array',
            options: [],
        },
        {
            key: 'striped',
            isBoolean: true,
            detail: 'striped',
            documentation: '是否为斑马纹 table。类型：boolean',
            options: [],
        },
        {
            key: 'bordered',
            isBoolean: true,
            detail: 'bordered',
            documentation: '是否带有边框。类型：boolean',
            options: [],
        },
        {
            key: 'size',
            default: 'small',
            detail: 'size',
            documentation: 'Table 的尺寸。类型：string',
            options: [
                {
                    value: 'large',
                    detail: 'large',
                    documentation: '大表格',
                },
                {
                    value: 'small',
                    detail: 'small',
                    documentation: '小表格',
                },
            ],
        },
        {
            key: 'height',
            default: '',
            detail: 'height',
            documentation: 'Table 的高度。如果 height 为 number 类型，单位 px；如果 height 为 string 类型，则这个高度会设置为 Table 的 style.height 的值，Table 的高度会受控于外部样式。。类型：string/number',
            options: [],
        },
        {
            key: 'max-height',
            default: '',
            detail: 'max-height',
            documentation: 'Table 的最大高度。类型：string/number',
            options: [],
        },
        {
            key: 'show-header',
            isBoolean: true,
            detail: 'show-header',
            documentation: '是否显示表头。类型：boolean',
            options: [],
        },
        {
            key: 'row-class',
            default: '',
            detail: 'row-class',
            documentation: '行的 className 的回调方法，也可以使用字符串为所有行设置一个固定的 className。类型：Function({row, rowIndex})/String',
            options: [],
        },
        {
            key: 'cell-class',
            default: '',
            detail: 'cell-class',
            documentation: '单元格的 className 的回调方法，也可以使用字符串为所有单元格设置一个固定的 className。类型：Function({row, column, rowIndex, columnIndex})/String',
            options: [],
        },
        {
            key: 'header-row-class',
            default: '',
            detail: 'header-row-class',
            documentation: '表头行的 className 的回调方法，也可以使用字符串为所有表头行设置一个固定的 className。类型：Function({row, rowIndex})/String',
            options: [],
        },
        {
            key: 'header-cell-class',
            default: '',
            detail: 'header-cell-class',
            documentation: '表头单元格的 className 的回调方法，也可以使用字符串为所有表头单元格设置一个固定的 className。类型：Function({row, column, rowIndex, columnIndex})/String',
            options: [],
        },
        {
            key: 'row-key',
            default: '',
            detail: 'row-key',
            documentation: '行数据的 Key，用来优化 Table 的渲染；类型为 String 时，支持多层访问：`user.info.id`，但不支持 `user.info[0].id`，此种情况请使用 `Function`。类型：Function(row)/String',
            options: [],
        },
        {
            key: 'empty-text',
            default: '暂无数据',
            detail: 'empty-text',
            documentation: '空数据显示文本，默认为“暂无数据”，可通过插槽 `slot=empty` 设置。类型：String',
            options: [],
        },
        {
            key: 'expand-row-keys',
            default: '',
            detail: 'expand-row-keys',
            documentation: '可以通过该属性设置 Table 目前的展开行，需要设置 row-key 属性才能使用，该属性为展开行的 keys 数组。类型：Array',
            options: [],
        },
        {
            key: 'expandable',
            default: '',
            detail: 'expandable',
            documentation: '对 tableColumn[type=expand] 的列有效，function 的返回值用来决定这一行的是否可以展开。类型：boolean function(row)',
            options: [],
        },
        {
            key: 'sort-order',
            default: 'ascending',
            detail: 'sort-order',
            documentation: '默认的排序列的prop和顺序。它的`prop`属性指定默认的排序的列，`order`指定默认排序的顺序。类型：Object',
            options: [
                {
                    value: 'ascending',
                    detail: 'ascending',
                    documentation: '升序'
                },
                {
                    value: 'descending',
                    detail: 'descending',
                    documentation: '降序'
                }
            ],
        },
        {
            key: 'row-col-span',
            default: '',
            detail: 'row-col-span',
            documentation: '合并行合并列的计算方法。类型：Function({ row, column, rowIndex, columnIndex })',
            options: [],
        },
        {
            key: 'selection',
            default: '',
            detail: 'selection',
            documentation: '当前表格选中的值。类型：array',
            options: [],
        },
        {
            key: 'checkboxable',
            default: '',
            detail: 'checkboxable',
            documentation: '仅对 tableColumn[type=selection] 的列有效， function 的返回值用来决定这一行的 Checkbox 是否可以勾选。类型：boolean function(row)',
            options: [],
        },
        {
            key: 'reserve-selection',
            isBoolean: true,
            detail: 'reserve-selection',
            documentation: '仅对 tableColumn[type=selection] 的列有效，当为 true 是则会在数据更新之后保留之前选中的数据（需配合 index-of-selection 来使用）。类型：boolean',
            options: [],
        },
        {
            key: 'index-of-selection',
            default: '',
            detail: 'index-of-selection',
            documentation: '仅对 tableColumn[type=selection] 的列有效，返回当前 row 在 selection 中的位置，当返回值 > -1 时则表示选中，否则则表示未选中。类型：number function (row, selection)',
            options: [],
        },
    ],
    events: [
        {
            key: 'select',
            detail: 'select',
            documentation: '当用户手动勾选数据行的 Checkbox 时触发的事件。参数：(selection, row)',
        },
        {
            key: 'select-all',
            detail: 'select-all',
            documentation: '当用户手动勾选全选的 Checkbox 时触发的事件。参数：(selection, row)',
        },
        {
            key: 'selection-change',
            detail: 'selection-change',
            documentation: '当选择项发生变化时会触发该事件。参数：(selection)',
        },
        {
            key: 'row-click',
            detail: 'row-click',
            documentation: '当某一行被点击时会触发该事件。参数：({ event, row, column })',
        },
        {
            key: 'row-mouse-enter',
            detail: 'row-mouse-enter',
            documentation: '当某一行触发 mouseenter 事件时触发。参数：({ event, row })',
        },
        {
            key: 'row-mouse-leave',
            detail: 'row-mouse-leave',
            documentation: '当某一行触发 mouseleave 事件时触发。参数：({ event, row })',
        },
        {
            key: 'cell-click',
            detail: 'cell-click',
            documentation: '当某一单元格被点击时会触发该事件。参数：({ event, row, column })',
        },
        {
            key: 'cell-mouse-enter',
            detail: 'cell-mouse-enter',
            documentation: '当某一单元格触发 mouseenter 事件时触发。参数：({ event, row, column, cell })',
        },
        {
            key: 'cell-mouse-leave',
            detail: 'cell-mouse-leave',
            documentation: '当某一单元格触发 mouseleave 事件时触发。参数：({ event, row, column, cell })',
        },
        {
            key: 'header-click',
            detail: 'header-click',
            documentation: '当某一列的表头被点击时触发该事件。参数：({ event, column })',
        },
        {
            key: 'sort-change',
            detail: 'sort-change',
            documentation: '当表格的排序条件发生变化的时候触发该事件。参数：({ column, prop, order })',
        },
        {
            key: 'expand-change',
            detail: 'expand-change',
            documentation: '当用户对某一行展开或者关闭的时候会触发该事件。参数：(row, expandedRows)',
        },
    ],
    detail: '表格',
    documentation: `一个二维数组，各类数据出现在单元格中，从行和列的交集中获取其上下文，使信息易于检索，便于用户查找和比较。`,
    snippets: {
        tag: 'mtd-table',
        attrs: {
            ':data': 'tableData',
        },
        children: [
            {
                tag: 'mtd-table-column',
                attrs: {
                    prop: '',
                    label: ''
                }
            }
        ]
    },
    path: '/#/components/table',
};
exports.tableColumn = {
    type: 'normal',
    prefix: 'm-table-column',
    name: 'mtd-table-column',
    props: [
        {
            key: 'type',
            default: '',
            detail: 'type',
            documentation: '对应列的类型。多选框设置`selection`；可展开的按钮设置 `expand`。类型：string',
            options: [
                {
                    value: 'selection',
                    detail: 'selection',
                    documentation: '多选列',
                },
                {
                    value: 'expand',
                    detail: 'expand',
                    documentation: '可展开列',
                },
            ],
        },
        {
            key: 'label',
            default: '',
            detail: 'label',
            documentation: '标题。类型：string',
            options: [],
        },
        {
            key: 'prop',
            default: '',
            detail: 'prop',
            documentation: '对应列内容的字段名，也可以使用 property 属性。类型：string',
            options: [],
        },
        {
            key: 'width',
            default: '',
            detail: 'width',
            documentation: '对应列的宽度。类型：string',
            options: [],
        },
        {
            key: 'min-width',
            default: '',
            detail: 'min-width',
            documentation: '对应列的最小宽度，与 width 的区别是 width 是固定的，min-width 会把剩余宽度按比例分配给设置了 min-width 的列。类型：string',
            options: [],
        },
        {
            key: 'fixed',
            default: 'left',
            detail: 'fixed',
            documentation: '列是否固定在左侧或者右侧，true 表示固定在左侧。类型：string, boolean',
            options: [
                {
                    value: 'left',
                    detail: 'left',
                    documentation: '固定在左侧'
                },
                {
                    value: 'right',
                    detail: 'right',
                    documentation: '固定在右侧'
                }
            ],
        },
        {
            key: 'sortable',
            isBoolean: true,
            detail: 'sortable',
            documentation: '对应列是否可以排序，如果设置为 custom，则代表用户希望远程排序，需要监听 Table 的 sort-change 事件。类型：boolean, string',
            options: [
                {
                    value: 'custom',
                    detail: 'custom',
                    documentation: '自定义排序'
                }
            ],
        },
        {
            key: 'sort-method',
            default: '',
            detail: 'sort-method',
            documentation: '对数据进行排序的时候使用的方法，仅当 sortable 设置为 true 的时候有效，需返回一个数字，和 Array.sort 表现一致。类型：number function(a, b)',
            options: [],
        },
        {
            key: 'align',
            default: 'left',
            detail: 'align',
            documentation: '对齐方式。类型：string',
            options: [
                {
                    value: 'left',
                    detail: 'left',
                    documentation: '左对齐',
                },
                {
                    value: 'center',
                    detail: 'center',
                    documentation: '居中',
                },
                {
                    value: 'right',
                    detail: 'right',
                    documentation: '右对齐',
                },
            ],
        },
        {
            key: 'header-align',
            default: '',
            detail: 'header-align',
            documentation: '表头对齐方式，优先级高于表格的对齐方式。类型：string',
            options: [
                {
                    value: 'left',
                    detail: 'left',
                    documentation: '表头左对齐',
                },
                {
                    value: 'center',
                    detail: 'center',
                    documentation: '表头居中',
                },
                {
                    value: 'right',
                    detail: 'right',
                    documentation: '表头右对齐',
                },
            ],
        },
        {
            key: 'class-name',
            default: '',
            detail: 'class-name',
            documentation: '列的 className。类型：string',
            options: [],
        },
        {
            key: 'label-class',
            default: '',
            detail: 'label-class',
            documentation: '当前列标题的自定义类名。类型：string',
            options: [],
        },
    ],
    events: [],
    detail: '表格列组件',
    documentation: `一个二维数组，各类数据出现在单元格中，从行和列的交集中获取其上下文，使信息易于检索，便于用户查找和比较。`,
    snippets: {
        tag: 'mtd-table-column',
        attrs: {
            prop: '',
            label: ''
        }
    },
    path: '/#/components/table',
};
//# sourceMappingURL=table.js.map