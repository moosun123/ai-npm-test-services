import createHoc from '@/utils/hoc';

export default function withCollapse (name, Component) {
  return createHoc({
    name,
    props: {
      value: [String, Number, Boolean, Object, Array],
    },
    inject: ['collapse'],
    computed: {
      active () {
        const isArray = Array.isArray(this.collapse.value);
        return isArray ? (this.collapse.value.indexOf(this.value) > -1)
          : this.collapse.value === this.value;
      },
    },
  }, {
    mapStateToProps (context) {
      return {
        active: context.active,
        value: context.value,
      };
    },
    mapMethodToListener (context) {
      return {
        'itemClick': function (active, item) {
          context.collapse.$emit('itemClick', active, item);
        },
      };
    },
  })(Component);
};
