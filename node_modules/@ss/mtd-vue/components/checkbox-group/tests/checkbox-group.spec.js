import { mount } from '@vue/test-utils';
import CheckboxGroup from '../checkbox-group.vue';
import MtdCheckbox from '@components/checkbox/index.js';

const Checkbox2 = {
  name: 'TestCheckbox',
  inject: ['checkboxGroup'],
  render (h) {
    const on = {
      click: () => {
        this.checkboxGroup.$emit('checkboxChange', true, this.value);
      }
    };
    return h('div', {
      on,
    });
  }
}

describe('CheckboxGroup', function () {
  it('create', () => {
    const wrapper = mount(CheckboxGroup);
    expect(wrapper.vm).to.exist;
  });

  it('should provide checkboxGroup to child component', function () {
    const wrapper = mount({
      render () {
        return <CheckboxGroup disabled={true} value="1">
          <MtdCheckbox value="1" />
          <MtdCheckbox value="2" />
          <MtdCheckbox value="3" />
        </CheckboxGroup>
      }
    });
    const checkbox = wrapper.find({ name: 'Checkbox' });
    expect(checkbox.vm.disabled).to.be.equal(true);
  });
  it('Checkbox 默认非 disabled', function () {
    const wrapper = mount({
      render () {
        return <CheckboxGroup value="1">
          <MtdCheckbox value="1" />
          <MtdCheckbox value="2" />
          <MtdCheckbox value="3" />
        </CheckboxGroup>
      }
    });

    const checkbox = wrapper.find({ name: 'Checkbox' });
    expect(checkbox.vm.disabled).to.be.equal(false);
  });

  it('Checkbox 默认非 disabled', function () {
    const wrapper = mount({
      render () {
        return <CheckboxGroup value="1">
          <MtdCheckbox disabled={true} value="1" />
          <MtdCheckbox value="2" />
          <MtdCheckbox value="3" />
        </CheckboxGroup>
      }
    });

    const checkbox = wrapper.find({ name: 'Checkbox' });
    expect(checkbox.vm.disabled).to.be.equal(true);
  });

  it('should lisenter checkboxGroup event and $emit input event', function () {
    const wrapper = mount(CheckboxGroup, {
      slots: {
        default: [Checkbox2]
      },
    });
    const checkbox = wrapper.find(Checkbox2);
    checkbox.trigger('click');

    expect(wrapper.emitted().checkboxChange.length).to.be.equal(1);
    expect(wrapper.emitted().input.length).to.be.equal(1);
  });
});
