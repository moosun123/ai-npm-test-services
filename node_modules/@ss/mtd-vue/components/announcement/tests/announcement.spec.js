import { mount } from '@vue/test-utils';
import Announcement from '../index';

describe('Announcement', function () {
  it('create', () => {
    const wrapper = mount(Announcement);
    expect(wrapper.vm).to.exist;
  });

  it('test title', function () {
    const wrapper = mount(Announcement, {
      propsData: {
        title: 'long time no see',
      }
    });
    expect(wrapper.find('.mtd-announcement-title').text()).to.equal('long time no see');
  });

  it('invoke with type', () => {
    const wrapper = mount(Announcement, {
      propsData: {
        title: 'super!',
        type: 'success',
      },
    });
    expect(wrapper.classes()).to.include('mtd-announcement-success');
  });

  it('hide close btn', () => {
    const wrapper = mount(Announcement, {
      propsData: {
        title: 'super!',
        closable: false,
      },
    });
    expect(wrapper.find('.mtd-announcement-close').attributes().style).to.contain('display: none;');
  });

  it('show icon', () => {
    const wrapper = mount(Announcement, {
      propsData: {
        title: 'super!',
        showIcon: true,
      },
    });
    expect(wrapper.find('.mtd-announcement-icon').exists()).to.be.true;
  });

  it('support close event', function () {
    const wrapper = mount(Announcement, {
      propsData: {
        title: 'super!',
      },
    });
    expect(wrapper.find('.mtd-announcement-close').exists()).to.be.true;
    wrapper.find('.mtd-announcement-close').trigger('click');
    expect(wrapper.emitted().close).to.be.ok;
  });
});
