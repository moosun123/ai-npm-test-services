import { mount } from '@vue/test-utils';
import { wait, waitImmediate, triggerClick } from '@test/util';
import Confirm from '../component.vue';
import ConfirmFn, { instances } from '../confirm.js';

const waitAnimated = () => wait(400)
describe('Confirm', function () {
  it('create', () => {
    const wrapper = mount(Confirm);
    expect(wrapper.vm).to.exist;
    wrapper.vm.handleCancel();
  });
  it('test string title', () => {
    const wrapper = mount(Confirm, {
      data () {
        return {
          title: 'string title',
          type: 'info',
        };
      },
    });
    expect(wrapper.find('.mtd-confirm-title').text()).to.equal('string title');
    wrapper.vm.handleCancel();
  });
  it('test string message', () => {
    const wrapper = mount(Confirm, {
      data () {
        return {
          message: 'string message',
        };
      },
    });
    expect(wrapper.find('.mtd-confirm-message').text()).to.equal('string message');
    wrapper.vm.handleCancel();
  });
  it('test html message', () => {
    const wrapper = mount(Confirm, {
      data () {
        return {
          message: '<p>html message</p>',
          dangerouslyUseHTMLString: true,
        };
      },
    });
    expect(wrapper.find('.mtd-confirm-message').find('p').text()).to.equal('html message');
    wrapper.vm.handleCancel();
  });
  it('invoke with type', () => {
    const wrapper = mount(Confirm, {
      data () {
        return {
          message: 'super!',
          type: 'success',
        };
      },
    });
    expect(wrapper.find('.mtd-confirm-icon').find('.mtdicon-success-circle').exists()).to.be.true;
    wrapper.vm.handleCancel();
  });

  it('Confirm.closeAll', async function () {
    const spy = sinon.spy();
    ConfirmFn({
      title: '确认信息',
      message: '春江潮水连海平，海上明月共潮生。滟滟随波千万里，何处春江无月明。江流宛转绕芳甸，月照花林皆似霰。空里流霜不觉飞，汀上白沙看不见。',
      width: '430px',
      showCancelButton: true,
      onCancel: spy,
    });
    await waitImmediate();
    let el = document.querySelector('.mtd-confirm-wrapper');
    expect(el).to.be.exist();
    expect(instances.length).to.be.eql(1);

    ConfirmFn.closeAll();
    await waitAnimated();

    el = document.querySelector('.mtd-confirm-wrapper');
    expect(el).to.be.not.exist('should destroyed');
    expect(instances.length).to.be.eql(0);
    spy.should.have.been.calledOnce();
  });

  it ('click cancel button', async function () {
    const spy = sinon.spy();
    ConfirmFn({
      title: '确认信息',
      message: '春江潮水连海平，海上明月共潮生。滟滟随波千万里，何处春江无月明。江流宛转绕芳甸，月照花林皆似霰。空里流霜不觉飞，汀上白沙看不见。',
      width: '430px',
      showCancelButton: true,
      onCancel: spy,
    });

    await waitImmediate();

    const el = document.querySelector('.mtd-confirm-wrapper');
    expect(el).to.be.exist();
    const cancelBtn = el.querySelector('.mtd-confirm-footer .mtd-btn');
    expect(cancelBtn.innerText).to.be.equal('取消');
    triggerClick(cancelBtn);
    await waitAnimated();

    expect(instances.length).to.be.eql(0);
    spy.should.have.been.calledOnce();
  });

  it ('click ok button', async function () {
    const spy = sinon.spy();
    ConfirmFn({
      title: '确认信息',
      message: '春江潮水连海平，海上明月共潮生。滟滟随波千万里，何处春江无月明。江流宛转绕芳甸，月照花林皆似霰。空里流霜不觉飞，汀上白沙看不见。',
      width: '430px',
      showCancelButton: true,
      onOk: spy,
    });

    await waitImmediate();

    const el = document.querySelector('.mtd-confirm-wrapper');
    expect(el).to.be.exist();
    const okBtn = el.querySelector('.mtd-confirm-footer .mtd-btn-primary');
    expect(okBtn.innerText).to.be.equal('确定');
    triggerClick(okBtn);
    await waitAnimated();

    expect(instances.length).to.be.eql(0);
    spy.should.have.been.calledOnce();
  });

});
