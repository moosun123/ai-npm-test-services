import {
  mount
} from '@vue/test-utils';
import RadioGroup from '../radio-group.vue';

const ChildRadioComponent = {
  name: 'TestRadio',
  inject: ['radioGroup'],
  render (h) {
    return h('div')
  }
}

describe('RadioGroup', function () {
  it('should provide radioGroup to child component', function () {
    const props = {
      value: 'xxx',
      size: 'small',
      disabled: false,
    };
    const wrapper = mount(RadioGroup, {
      propsData: props,
      slots: {
        default: [ChildRadioComponent]
      },
    });

    const radio = wrapper.find(ChildRadioComponent);
    expect(radio.vm.radioGroup).to.be.include(props);
    expect(radio.vm.radioGroup.$emit).to.be.an('function');
  });

  it('should lisenter radioChange event and $emit input event', function () {
    const wrapper = mount(RadioGroup, {
      slots: {
        default: [ChildRadioComponent]
      },
    });
    const radio = wrapper.find(ChildRadioComponent);
    radio.vm.radioGroup.$emit('radioChange', '111');

    expect(wrapper.emitted().input.length).to.be.equal(1);
    expect(wrapper.emitted().input[0][0]).to.be.equal('111');
  });
});
