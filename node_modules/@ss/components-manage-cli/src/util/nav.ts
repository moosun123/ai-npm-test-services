import { fatalLog } from '@ss/components-manage-tools';

function checkPathDuplicate(payload: any) {
    const map: Map<string, boolean> = new Map();
    payload.forEach(group => {
        (group?.list ?? []).forEach(item => {
            if (map.get(item.path)) {
                fatalLog(`发现重复的路由 ${item.path}`);
            } else {
                map.set(item.path, true);
            }
        });
    });
}

export function readComponentsNavInfo(filePath: string): any {
    let navData!: any;
    try {
        const navConfig = require(filePath);
        navData = (navConfig as any)[0].groups;
        checkPathDuplicate(navData);
        return navData;
    } catch (e) {
        console.error(`读取nav.config.json失败，文件路径为：${filePath}`);
        return [];
    }
}

export function readDocNavInfo(payload: any): any {
    const { filePath, framework, platform } = payload;
    try {
        if (framework === 'vue' && platform === 'mobile') {
            return [];
        }
        return require(filePath);
    } catch (e) {
        console.error(`读取doc.config.json失败，文件路径为：${filePath}`);
        return [];
    }
}
