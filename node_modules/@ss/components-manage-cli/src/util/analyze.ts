import * as path from 'path';
import * as fs from 'fs';
import { fatalLog } from '@ss/components-manage-tools';
import { extractFileNameList } from './common';
import { reactTemplateParser, vueTemplateParser } from './entry';

export async function analyzePackageDep(directory: string): Promise<any> {
    const packageJsonPath = path.join(directory, 'package.json');
    if (!fs.existsSync(packageJsonPath)) {
        fatalLog('package.json not exist');
    }
    const value = await fs.readFileSync(packageJsonPath).toString();
    const packageJSON = JSON.parse(value);
    return {
        dependencies: packageJSON.dependencies || {},
        peerDependencies: packageJSON.peerDependencies || {},
    };
}

export async function analyzeCompDep(directory: string, framework: string, packageDep: any): Promise<any> {
    const fileList = extractFileNameList(framework);
    return framework === 'vue' ? await vueTemplateParser(fileList, packageDep) : reactTemplateParser(fileList, packageDep);
}
