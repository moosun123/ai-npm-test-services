import { getTemplates, Template } from './template';
import execa from 'execa';
import * as path from 'path';
import { ZIP_DIR } from './constant';
import * as fs from 'fs';

async function zip (template: Template, targetDir: string ) {
  const f = `./${template.id}.tar.gz`;
  const pathDir = path.join(template.path, '..');
  await execa('tar', ['-C', pathDir, '-zcvf', f, template.name]);
  await execa('mv', [f, targetDir]);
  process.exit(0);
}

export const buildZips = async function (options: any, dist: string = ZIP_DIR) {
  const templates = await getTemplates(options.zipPath);
  if (!fs.existsSync(dist)) {
    fs.mkdirSync(dist)
  }
  templates.forEach((td) => {
    td.children.forEach(async (template) => {
      await zip(template, dist);
    });
  });
};