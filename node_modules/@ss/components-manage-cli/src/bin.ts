#!/usr/bin/env node
import { init } from './lib/init';
// import { register } from './lib/register';
// import { updateLibInfo } from './lib/updateLibInfo';
import { buildCSS } from './lib/buildCss';
import { buildTS } from './lib/buildTs';
import { buildEntry } from './lib/buildEntry';
import { publish } from './lib/publish';
import { handleLogin } from '@ss/components-manage-tools';
import { addTemplate } from './lib/addTemplate';
import { buildLowcode, buildLowcodeLocal } from './lib/lowcode';
import { buildZip } from './lib/buildZip';
import { coverage } from './lib/coverage';
import { create } from './lib/create';
import { remove } from './lib/remove';

const commander = require('commander');

commander.version(require('../package.json').version, '-v, --version');

commander.command('login').option('-t, --token <token>').description('login to publish').action(handleLogin);

commander.command("init").description('init project').action(init);

// commander.command("register <registerType>").description('register to component').action(register);

// commander.command("updateLibInfo <libType>").description('update lib info').action(updateLibInfo);

commander.command('buildCSS').description('build css').action(buildCSS);

commander.command('buildEntry').option('--custom-entry').description('build entry').action(buildEntry);

commander.command('buildTS').description('build typescript definition').action(buildTS);

commander.command('publish')
    .option('--skip-check')
    .option('--skip-check-branch')
    .option('-st, --skip-test')
    .option('-sv, --skip-version')
    .option('-ss, --skip-screenshot')
    .option('-ssp, --screenshot-port [screenshotPort]')
    .option('-pnlw, --publish-no-lowcode')
    .option('-plw, --publish-lowcode')
    .option('-pdc, --publish-docs')
    .option('-stack, --publish-tpl-tech-stack [publishTplTechStack]')
    .description('publish a version for componentLib').action(publish);

commander.command('addTemplate <templateId> [target] [fileName]')
    .description('add vue template by id')
    .option('-s, --skipInstallDep', 'Skip install dependencies')
    .action(addTemplate);

commander.command('buildLowcode').description('build lowcode').action(buildLowcode);

commander.command('buildLowcodeLocal').action(buildLowcodeLocal);

commander.command('zip').option('-zph, --zip-path [zipPath]').description('template build zips').action(buildZip);

commander.command('coverage').description('test coverage').action(coverage);

commander.command('create <componentName> <cnName>').description('create component').action(create);

commander.command('remove <componentName>').description('remove component').action(remove);

commander.parse(process.argv);
