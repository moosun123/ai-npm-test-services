"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.sassTemplate = exports.typeDefTemplate = exports.componentDocTemplate = exports.testTemplate = exports.tsRegistryTemplate = exports.esRegistryTemplate = exports.tsDemoTemplate = exports.esDemoTemplate = exports.esComponentTemplate = exports.tsComponentTemplate = exports.esEntryTemplate = exports.tsEntryTemplate = exports.generateVueTagNameList4Vue3 = exports.generateVueTagNameList = exports.reactTemplateParser = exports.vueTemplateParser = void 0;
const fs = __importStar(require("fs"));
const path = __importStar(require("path"));
const components_manage_tools_1 = require("@ss/components-manage-tools");
const common_1 = require("./common");
const nanoid_1 = require("nanoid");
async function vueTemplateParser(fileList, packageDep) {
    const dep = {};
    const { vueVersion, vueVersionMap } = (0, common_1.getVueVersion)();
    await (0, common_1.checkCompiler)(vueVersion, vueVersionMap);
    fileList.forEach(file => {
        if (!fs.existsSync(file.filePath)) {
            (0, components_manage_tools_1.fatalLog)(`组件${file.fileName}的文件名有误，正确的路径是${file.filePath}`);
        }
        let ast = [];
        let tagNameList = [];
        let depList = [];
        const content = fs.readFileSync(file.filePath).toString();
        if (vueVersionMap === 3) {
            const compileTemplate = require('@vue/compiler-sfc').compileTemplate;
            ast = compileTemplate({ source: content, filename: file.fileName, id: file.fileName }).ast;
            tagNameList = generateVueTagNameList4Vue3(ast);
            depList = generateCompDep(content, packageDep);
        }
        else {
            const compile = require('vue-template-compiler').compile;
            ast = compile(content).ast;
            tagNameList = generateVueTagNameList(ast);
            depList = generateCompDep(content, packageDep);
        }
        dep[file.fileName] = {
            tagNameList,
            depList,
        };
    });
    return dep;
}
exports.vueTemplateParser = vueTemplateParser;
function reactTemplateParser(fileList, packageDep) {
    const dep = {};
    fileList.forEach(file => {
        const content = fs.readFileSync(file.filePath).toString();
        const depList = generateCompDep(content, packageDep);
        const tagNameList = generateReactTagNameList(content);
        dep[file.fileName] = {
            tagNameList,
            depList,
        };
    });
    return dep;
}
exports.reactTemplateParser = reactTemplateParser;
function generateVueTagNameList(ast, isMtd = true) {
    const tagList = [];
    const stack = [];
    stack.push(ast);
    while (stack.length !== 0) {
        const item = stack.shift();
        if (!!item.tag) {
            tagList.push(item.tag);
        }
        if (item.children && item.children.length > 0) {
            stack.push(...(item.children));
        }
    }
    return isMtd
        ? tagList
            .filter(tag => !!tag)
            .filter(tag => tag.startsWith('mtd') || tag.startsWith('Mtd'))
            .map(tag => (0, common_1.toCamelCaseTag)(tag))
        : tagList;
}
exports.generateVueTagNameList = generateVueTagNameList;
function generateVueTagNameList4Vue3(ast, isMtd = true) {
    const tagList = [];
    const stack = [];
    if (ast === null || ast === void 0 ? void 0 : ast.children[0]) {
        stack.push(ast === null || ast === void 0 ? void 0 : ast.children[0]);
    }
    while (stack.length !== 0) {
        const item = stack.shift();
        if (!!item.tag) {
            tagList.push(item.tag);
        }
        if (item.children && item.children.length > 0) {
            stack.push(...(item.children));
        }
    }
    return isMtd
        ? tagList
            .filter(tag => !!tag)
            .filter(tag => tag.startsWith('mtd') || tag.startsWith('Mtd'))
            .map(tag => (0, common_1.toCamelCaseTag)(tag))
        : tagList;
}
exports.generateVueTagNameList4Vue3 = generateVueTagNameList4Vue3;
function generateReactTagNameList(content) {
    var _a, _b, _c;
    return ((_c = (_b = (_a = content === null || content === void 0 ? void 0 : content.match(/<(\w+)[\s>]/g)) === null || _a === void 0 ? void 0 : _a.filter(tag => tag === null || tag === void 0 ? void 0 : tag.startsWith('<Mtd'))) === null || _b === void 0 ? void 0 : _b.map(tag => { var _a; return (_a = tag === null || tag === void 0 ? void 0 : tag.match(/<(\w+)[\s>]/)) === null || _a === void 0 ? void 0 : _a[1]; })) !== null && _c !== void 0 ? _c : []);
}
function generateCompDep(content, packageDep) {
    const result = [];
    const reg = new RegExp(/import.+from.+['"](.+)['"]/g);
    const matchedList = content.match(reg);
    const depMap = {};
    if (matchedList) {
        matchedList.forEach(item => {
            const value = item.match(/import.+from.+['"](.+)['"]/);
            const dependencies = value[1];
            if (!depMap[dependencies]) {
                const isExternal = dependencies in packageDep.dependencies || dependencies in packageDep.peerDependencies;
                const version = packageDep.dependencies[dependencies] || packageDep.peerDependencies[dependencies] || '';
                result.push({
                    dependencies,
                    version,
                    isExternal,
                });
                depMap[dependencies] = true;
            }
        });
    }
    return result;
}
function replaceEntryTemplate(subPath, payload) {
    const { listModuleStr, importModuleStr, listComponentStr, importComponentStr, installComponentStr } = payload;
    return fs
        .readFileSync(subPath)
        .toString()
        .replace(/listModuleStr/g, listModuleStr)
        .replace(/importModuleStr/g, importModuleStr)
        .replace(/listComponentStr/g, listComponentStr)
        .replace(/importComponentStr/g, importComponentStr)
        .replace(/installComponentStr/g, installComponentStr);
}
function tsEntryTemplate(payload, isCustomEntryPath) {
    const { vueVersionMap } = (0, common_1.getVueVersion)();
    const vueTplPath = vueVersionMap === 3 ? '../template/vue3_pc_ts/entry.txt' : '../template/vue_pc_ts/entry.txt';
    return replaceEntryTemplate(isCustomEntryPath ? path.join(process.cwd(), './entry.txt') : path.join(__dirname, vueTplPath), payload);
}
exports.tsEntryTemplate = tsEntryTemplate;
function esEntryTemplate(payload, isCustomEntryPath) {
    return replaceEntryTemplate(isCustomEntryPath ? path.join(process.cwd(), './entry.txt') : path.join(__dirname, '../template/vue_pc_es/entry.txt'), payload);
}
exports.esEntryTemplate = esEntryTemplate;
function replaceComponentTemplate(subPath, exportName, componentClassName) {
    return fs
        .readFileSync(path.join(__dirname, subPath))
        .toString()
        .replace(/exportName/g, exportName)
        .replace(/componentClassName/g, componentClassName);
}
function tsComponentTemplate(exportName, componentClassName) {
    const { vueVersionMap } = (0, common_1.getVueVersion)();
    const vueTplPath = vueVersionMap === 3 ? '../template/vue3_pc_ts/component.txt' : '../template/vue_pc_ts/component.txt';
    return replaceComponentTemplate(vueTplPath, exportName, componentClassName);
}
exports.tsComponentTemplate = tsComponentTemplate;
function esComponentTemplate(exportName, componentClassName) {
    return replaceComponentTemplate('../template/vue_pc_es/component.txt', exportName, componentClassName);
}
exports.esComponentTemplate = esComponentTemplate;
function replaceDemoTemplate(subPath, exportName) {
    return fs
        .readFileSync(path.join(__dirname, subPath))
        .toString()
        .replace(/exportName/g, exportName);
}
function esDemoTemplate(exportName) {
    return replaceDemoTemplate('../template/vue_pc_es/demo.txt', exportName);
}
exports.esDemoTemplate = esDemoTemplate;
function tsDemoTemplate(exportName) {
    const { vueVersionMap } = (0, common_1.getVueVersion)();
    const vueTplPath = vueVersionMap === 3 ? '../template/vue3_pc_ts/demo.txt' : '../template/vue_pc_ts/demo.txt';
    return replaceDemoTemplate(vueTplPath, exportName);
}
exports.tsDemoTemplate = tsDemoTemplate;
function replaceRegistryTemplate(subPath, exportName, componentName) {
    return fs
        .readFileSync(path.join(__dirname, subPath))
        .toString()
        .replace(/exportName/g, exportName)
        .replace(/fileName/g, componentName);
}
function esRegistryTemplate(exportName, componentName) {
    return replaceRegistryTemplate('../template/vue_pc_es/registry.txt', exportName, componentName);
}
exports.esRegistryTemplate = esRegistryTemplate;
function tsRegistryTemplate(exportName, componentName) {
    const { vueVersionMap } = (0, common_1.getVueVersion)();
    const vueTplPath = vueVersionMap === 3 ? '../template/vue3_pc_ts/registry.txt' : '../template/vue_pc_ts/registry.txt';
    return replaceRegistryTemplate(vueTplPath, exportName, componentName);
}
exports.tsRegistryTemplate = tsRegistryTemplate;
function testTemplate(exportName, componentName) {
    return fs
        .readFileSync(path.join(__dirname, '../template/common/test.txt'))
        .toString()
        .replace(/exportName/g, exportName)
        .replace(/componentName/g, componentName);
}
exports.testTemplate = testTemplate;
function componentDocTemplate(componentName, cnName, maintainer) {
    return fs
        .readFileSync(path.join(__dirname, '../template/common/doc.txt'))
        .toString()
        .replace(/componentName/g, componentName)
        .replace(/cnNameVal/g, cnName)
        .replace(/maintainerVal/g, maintainer)
        .replace(/nanoId/g, (0, nanoid_1.nanoid)());
}
exports.componentDocTemplate = componentDocTemplate;
function typeDefTemplate(exportName) {
    return fs
        .readFileSync(path.join(__dirname, '../template/common/typeDef.txt'))
        .toString()
        .replace(/exportName/g, exportName);
}
exports.typeDefTemplate = typeDefTemplate;
function sassTemplate(className) {
    return fs
        .readFileSync(path.join(__dirname, '../template/common/sass.txt'))
        .toString()
        .replace(/className/g, className);
}
exports.sassTemplate = sassTemplate;
