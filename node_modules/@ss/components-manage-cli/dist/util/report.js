"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.injectReportLogic = void 0;
const fs = __importStar(require("fs"));
const path = __importStar(require("path"));
const components_manage_tools_1 = require("@ss/components-manage-tools");
function injectReportLogic() {
    var _a, _b;
    if (!process.env.DISABLE_REPORT_INSPECTION) {
        const dir = process.cwd();
        const reportJS = path.join(dir, 'report.js');
        if (fs.existsSync(reportJS)) {
            return;
        }
        const jsContent = fs.readFileSync(path.join(__dirname, '../template/common/report.txt'));
        fs.writeFileSync(reportJS, jsContent);
        const packageJSON = path.join(dir, 'package.json');
        if (!fs.existsSync(packageJSON)) {
            (0, components_manage_tools_1.fatalLog)('package.json 不存在');
        }
        const packageVal = JSON.parse(fs.readFileSync(packageJSON).toString());
        (_a = packageVal.files) === null || _a === void 0 ? void 0 : _a.push('template.json', 'report.js');
        if (!((_b = packageVal === null || packageVal === void 0 ? void 0 : packageVal.scripts) === null || _b === void 0 ? void 0 : _b.postinstall)) {
            if (!(packageVal === null || packageVal === void 0 ? void 0 : packageVal.dependencies['@ss/lx-report'])) {
                packageVal.dependencies['@ss/lx-report'] = '^0.0.3';
            }
            packageVal.scripts.postinstall = 'node report.js';
        }
        else {
            (0, components_manage_tools_1.successLog)('postinstall 已存在，请将"node report.js" 追加到postinstall npm script中');
        }
        fs.writeFileSync(packageJSON, JSON.stringify(packageVal));
        (0, components_manage_tools_1.successLog)('已添加组件库上报逻辑，请将package.json代码格式后，提交代码并重新发布');
        process.exit(-1);
    }
}
exports.injectReportLogic = injectReportLogic;
