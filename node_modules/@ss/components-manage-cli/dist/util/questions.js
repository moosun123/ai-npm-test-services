"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.askReleaseOnNotMasterBranch = exports.askInstallInCwd = exports.askRemoveComponent = exports.askGitNotCommit = exports.askGitNotPush = exports.askVersion = void 0;
const inquirer = require('inquirer');
async function askVersion(prevVersion) {
    const questions = [
        {
            type: 'input',
            name: 'version',
            message: `上次发布的版本为${prevVersion}, 本次即将发布的版本为(请填写，填写完成后，将自动commit并push代码):`,
        },
    ];
    const result = await inquirer.prompt(questions);
    return result.version.trim();
}
exports.askVersion = askVersion;
async function askGitNotPush() {
    const questions = [
        {
            type: 'confirm',
            name: 'isOk',
            message: `当前git仓库有未push的commit，确定继续发布?`,
        },
    ];
    return inquirer.prompt(questions);
}
exports.askGitNotPush = askGitNotPush;
async function askGitNotCommit() {
    const questions = [
        {
            type: 'confirm',
            name: 'isOk',
            message: `当前git仓库有未commit的变更，确定继续发布?`,
        },
    ];
    return inquirer.prompt(questions);
}
exports.askGitNotCommit = askGitNotCommit;
async function askRemoveComponent(component) {
    const questions = [
        {
            type: 'confirm',
            name: 'isOk',
            message: `您确认删除组件: ${component} 吗？ 这将删除该组件相关的所有文件`,
        },
    ];
    return inquirer.prompt(questions);
}
exports.askRemoveComponent = askRemoveComponent;
async function askInstallInCwd() {
    const questions = [
        {
            type: 'confirm',
            name: 'isOk',
            message: `是否将模板下载到当前执行路径下？`,
        },
    ];
    return inquirer.prompt(questions);
}
exports.askInstallInCwd = askInstallInCwd;
async function askReleaseOnNotMasterBranch(branch) {
    const questions = [
        {
            type: 'confirm',
            name: 'isOk',
            message: `您当前在 ${branch} 分支，确认继续发布？`,
        },
    ];
    return inquirer.prompt(questions);
}
exports.askReleaseOnNotMasterBranch = askReleaseOnNotMasterBranch;
