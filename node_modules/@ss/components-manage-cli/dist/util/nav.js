"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.readDocNavInfo = exports.readComponentsNavInfo = void 0;
const components_manage_tools_1 = require("@ss/components-manage-tools");
function checkPathDuplicate(payload) {
    const map = new Map();
    payload.forEach(group => {
        var _a;
        ((_a = group === null || group === void 0 ? void 0 : group.list) !== null && _a !== void 0 ? _a : []).forEach(item => {
            if (map.get(item.path)) {
                (0, components_manage_tools_1.fatalLog)(`发现重复的路由 ${item.path}`);
            }
            else {
                map.set(item.path, true);
            }
        });
    });
}
function readComponentsNavInfo(filePath) {
    let navData;
    try {
        const navConfig = require(filePath);
        navData = navConfig[0].groups;
        checkPathDuplicate(navData);
        return navData;
    }
    catch (e) {
        console.error(`读取nav.config.json失败，文件路径为：${filePath}`);
        return [];
    }
}
exports.readComponentsNavInfo = readComponentsNavInfo;
function readDocNavInfo(payload) {
    const { filePath, framework, platform } = payload;
    try {
        if (framework === 'vue' && platform === 'mobile') {
            return [];
        }
        return require(filePath);
    }
    catch (e) {
        console.error(`读取doc.config.json失败，文件路径为：${filePath}`);
        return [];
    }
}
exports.readDocNavInfo = readDocNavInfo;
