const fs = require('fs');
const path = require('path');
const cp = require('child_process');
const jestConfigContent = `
module.exports = {
  preset: '@vue/cli-plugin-unit-jest/presets/typescript-and-babel',
  globals: {
    'ts-jest': {
      diagnostics: {
        pathRegex: /\\.(spec|test)\\.ts$/
      }
    }
  },
  "collectCoverage": true,
  "collectCoverageFrom": ["components/**/*.vue", "!components/**/doc/*.{ts,vue}", "!components/**/components/**/*.{ts,vue}"]
};
`;
cp.execSync('yarn add @vue/cli-plugin-unit-jest @ss/mtd-manage-commander@latest babel-jest @types/jest --dev --registry=http://r.npm.sankuai.com');
cp.execSync('yarn remove @types/mocha nyc @vue/cli-plugin-unit-mocha');
const packageJSONFile = path.join(__dirname, './package.json');
const packageJsonContent = fs.readFileSync(packageJSONFile).toString().replace('nyc vue-cli-service test:unit', 'vue-cli-service test:unit --no-cache');
fs.writeFileSync(packageJSONFile, packageJsonContent);
const tsConfigFile = path.join(__dirname, './tsconfig.json');
const tsConfigContent = fs.readFileSync(tsConfigFile).toString().replace('mocha', 'jest');
fs.writeFileSync(tsConfigFile, tsConfigContent);
fs.writeFileSync(path.join(__dirname, './jest.config.js'), jestConfigContent);
fs.unlinkSync(path.join(__dirname, './nyc.config.js'));
