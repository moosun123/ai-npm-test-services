"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.publish = void 0;
const path = __importStar(require("path"));
const publishComponentLib_1 = require("./publishComponentLib");
const publishTemplateLib_1 = require("./publishTemplateLib");
const lowcode_1 = require("./lowcode");
const docs_1 = require("./docs");
const components_manage_tools_1 = require("@ss/components-manage-tools");
const publish = async (options) => {
    console.log('publish options======>', options);
    if (options.publishLowcode) {
        (0, lowcode_1.publishLowcode)(options);
    }
    else if (options.publishDocs) {
        (0, docs_1.publishDocs)(options);
    }
    else {
        const libInfo = require(path.join(process.cwd(), 'template.json'));
        const { materialType } = libInfo;
        if (materialType === 'component') {
            (0, publishComponentLib_1.publishComponentLib)(options);
        }
        else if (materialType === 'template') {
            if (options.publishTplTechStack === 'vue') {
                options.templatePath = 'views';
                options.entryName = 'main.ts';
            }
            else if (options.publishTplTechStack === 'react') {
                options.templatePath = 'pages';
                options.entryName = 'index.js';
            }
            else {
                (0, components_manage_tools_1.fatalLog)('缺少发布的模板库技术栈配置项，cm cli使用文档请参考 https://km.sankuai.com/collabpage/1348115416。');
            }
            (0, publishTemplateLib_1.publishTemplateLib)(options);
        }
        else {
            (0, components_manage_tools_1.fatalLog)('template.json文件中缺失materialType配置项，请添加（组件库值为component，模板库值为template）。');
        }
    }
};
exports.publish = publish;
