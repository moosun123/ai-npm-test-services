import DatePicker from './picker/date-picker';
import CreateComponent from './control';
import { withFormItem } from '../form-item';
import RangeDatePickerPanel from './panel/Date/date-range.vue';
import dayjs, {
  DEFAULT_FORMATS,
  TYPE_VALUE_RESOLVER_MAP,
} from '../../utils/date';
import {
  HolidayCalendarRange
} from '../../utils/specialDayRange';

const MpaDatePicker = withFormItem(
    'MpaDatePicker',
    CreateComponent('DatePickerWrapper', DatePicker),
    {
      withRef: true,
      methods: {
        focus () {
          this.$refs.wrappedInstance.$refs.wrappedInstance.focus();
        },
        blur () {
          this.$refs.wrappedInstance.$refs.wrappedInstance.blur();
        },
      },
    },
);

/* istanbul ignore next */
// @ts-ignore
MpaDatePicker.install = (Vue) => {
    // @ts-ignore
    Vue.component(MpaDatePicker.componentName, MpaDatePicker);
};

function format(date, format) {
  return dayjs(date).format(format)
}

function getQuarter(date) {
  return dayjs(date).quarter()
}

function getWeekNumber(date, iso = false, weekYearFirstStart = true) {
  let weekOfYear;
  if (iso) {
    weekOfYear = dayjs(date).isoWeek();
  } else {
    weekOfYear = dayjs(date).week();
  }
  return weekOfYear;
}
// 与 visualValue 区别在于 X 天前不存在，纯 Format 实现
function getFormatValueByType(date, type, weekStart = 1, weekYearFirstStart = true) {
  let date1;
  if (Array.isArray(date) && date.length > 0) {
    date1 = date[0];
  } else {
    date1 = date;
  }
  const year = date1.getFullYear();
  const month = date1.getMonth();
  const firstDayWeek = dayjs(`${year}-${month + 1}-1`).day();
  let weekCount = firstDayWeek;
  // 标准周周日是几号
  let firstWeekEndDay = weekStart;
  if (weekStart === 0) {
    weekCount = 7;
    firstWeekEndDay = weekCount;
  }
  if (weekYearFirstStart) {
    dayjs.updateLocale('zh-cn', {
      yearStart: 1,
      weekStart: weekStart,
    });
  } else {
    if (weekStart !== 1) {
      dayjs.updateLocale('zh-cn', {
        // 年起始周自定义，1 号 + 7 - 差值
        yearStart: firstWeekEndDay,
        weekStart: weekStart
      });
    } else {
      dayjs.updateLocale('zh-cn', {
        yearStart: 1,
        weekStart: weekStart
      });
    }
  }
  const format = DEFAULT_FORMATS[type];
  const { formatter } = (
    TYPE_VALUE_RESOLVER_MAP[type] ||
    TYPE_VALUE_RESOLVER_MAP['default']
  );
  return formatter(date, format);
}

MpaDatePicker.utils = {
  defaultHolidays: HolidayCalendarRange,
  format: format,
  getQuarter: getQuarter,
  getWeekNumber: getWeekNumber,
  getFormatValueByType: getFormatValueByType,
}
MpaDatePicker.RangeDatePickerPanel = RangeDatePickerPanel;
export default MpaDatePicker;

