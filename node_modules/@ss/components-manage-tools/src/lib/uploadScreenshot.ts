import * as path from 'path';
import { nanoid } from 'nanoid';

const bucket = 'mtd-screenshots';
const endpoint = 's3plus.vip.sankuai.com';
const tenantId = '90f1b843ded34009946a59b66198d302';
const accessKeyId = '12f67448563c41dea6187f7f765a8b3f';
const accessKeySecret = '47fe39a394934a0ca264c93eee5c551b';
const s3PrefixPath = `https://s3plus.sankuai.com/v1/mss_90f1b843ded34009946a59b66198d302`;
const prefixPath = `${s3PrefixPath}/${bucket}`;

export async function uploadScreenShots(cwd: string, materials: any, screenShotsPrefix: any, materialType: any): Promise<any> {
    const s3plus = require('@mosfe/s3plus');
    const directoryId = nanoid();
    const s3Client = new s3plus({
        accessKeyId: accessKeyId,
        accessKeySecret: accessKeySecret,
        tenantId: tenantId,
        endpoint: endpoint,
        bucket: bucket,
        customPath: directoryId,
        deployCatalog: path.join(cwd, screenShotsPrefix),
    });
    await s3Client.deploy();
    const screenshotsURL: any = {};
    if (materialType === 'componentLib') {
        Object.entries(materials).forEach(([component, name]) => {
            screenshotsURL[component] = `${prefixPath}/${directoryId}/${name}.png`;
        });
    }
    if (materialType === 'templateLib') {
        materials && materials.length > 0 && materials.forEach((template: any) => {
            screenshotsURL[template.key] = `${prefixPath}/${directoryId}/${template.key}.png`;
        });
    }
    return screenshotsURL;
}

// export function getSketchAssetsPathPrefix() {
//     const directoryId = nanoId();
//     const env = process.env.deployEnv === 'test' ? 'test' : 'production';
//     const customPath = `${env}/${directoryId}`;
//     const bucket = 'mtd-cm2sketch-assets';
//     return {
//         s3Prefix: `${s3PrefixPath}/${bucket}/${customPath}`,
//         bucket,
//         customPath,
//     };
// }

// export async function uploadSketchAssets(assetPath: string, customPath: string) {
//     const s3plus = require('@mosfe/s3plus');
//     const bucket = 'mtd-cm2sketch-assets';
//     const s3Client = new s3plus({
//         accessKeyId: accessKeyId,
//         accessKeySecret: accessKeySecret,
//         tenantId: tenantId,
//         endpoint: endpoint,
//         bucket: bucket,
//         customPath: customPath,
//         deployCatalog: path.resolve(assetPath),
//     });
//     await s3Client.deploy();
// }

// export async function uploadSketchScreenShots(
//     cwd: string,
//     sketchComponentConfig: any[],
// ) {
//     const s3plus = require('@mosfe/s3plus');
//     const directoryId = nanoId();
//     const s3Client = new s3plus({
//         accessKeyId: accessKeyId,
//         accessKeySecret: accessKeySecret,
//         tenantId: tenantId,
//         endpoint: endpoint,
//         bucket: bucket,
//         customPath: directoryId,
//         deployCatalog: path.join(cwd, SKETCH_SCREEN_SHOTS_PREFIX),
//     });
//     await s3Client.deploy();
//     return sketchComponentConfig.map(i => {
//         return {
//             ...i,
//             demos: i.demos.map(j => {
//                 return {
//                     ...j,
//                     previewUrl: `${prefixPath}/${directoryId}/${j.previewUrl}`,
//                 };
//             }),
//         };
//     });
// }

// export async function uploadSketchInverseAsset(assetPath: string) {
//     const s3plus = require('@mosfe/s3plus');
//     const directoryId = nanoId();
//     const env = process.env.deployEnv === 'test' ? 'test' : 'production';
//     const customPath = `${env}/${directoryId}`;
//     const bucket = 'mtd-inverse-asset';
//     const s3Client = new s3plus({
//         accessKeyId: accessKeyId,
//         accessKeySecret: accessKeySecret,
//         tenantId: tenantId,
//         endpoint: endpoint,
//         bucket: bucket,
//         customPath: customPath,
//         deployCatalog: path.resolve(assetPath),
//     });
//     await s3Client.deploy();
//     return `${s3PrefixPath}/${bucket}/${customPath}/${SKETCH_INVERSE_FILENAME}`;
// }
