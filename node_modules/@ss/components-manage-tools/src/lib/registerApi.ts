import { fatalLog } from '../util/log';
import { checkLogin } from './login';
import { registerUrlMap, envHost, registerParamsKeyMap, getSignature } from '../util/constant';

const fetch = require('node-fetch');

export const registerApi = async (registerParams: any, registerType: any) => {
    const token = checkLogin();
    const _octo = await getSignature();
    const url = registerUrlMap[registerType];
    const queryParams: any = {};
    Object.keys(registerParamsKeyMap[registerType]).map((key: any) => {
        if (key === 'libName' || key === 'templateName') {
            queryParams[key] = registerParams['name'];
        } else {
            queryParams[key] = registerParams[key];
        }
    });
    queryParams['token'] = token;
    console.log(queryParams)
    try {
        const value = await fetch(`${envHost}${url}`, {
            method: 'POST',
            body: JSON.stringify(queryParams),
            headers: {
                "Content-Type": 'application/json',
                "oceanus-auth": _octo
            },
        });
        const data = await value.json();
        console.log(data)
        const gitUrl = data && data.data && data.data.git;
        const libId = data && data.data && data.data.libId;
        const libName = data && data.data && data.data.libName;
        return {
            gitUrl,
            libId,
            libName
        };
    } catch (e: any) {
        fatalLog(`register component failed: ${e}.`)
    }
}