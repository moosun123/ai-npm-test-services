import * as fs from 'fs';
import * as path from 'path';
import { fatalLog, successLog } from '../util/log';

const inquirer = require('inquirer');

const questions: any[] = [
    {
        type: 'input',
        name: 'token',
        message: '请输入用户token',
        default: '',
    },
];

const homeDir = process.env['HOME'];
const deployEnv = process.env['DEPLOY_ENV'];
const configPath = deployEnv === 'test' ? path.join(homeDir, './.cmrc-test') : path.join(homeDir, './.cmrc-prod');

export async function handleLogin(options) {
    let token = options.token;
    if (!token) {
        const answer: any = await inquirer.prompt(questions);
        token = answer.token;
    }
    fs.writeFileSync(configPath, `token: ${token}`);
    successLog('🚀token写入成功');
    process.exit(0);
}

export function checkLogin() {
    if (!fs.existsSync(configPath)) {
        fatalLog('您尚未登录，请登录后再发布，命令为yarn sign');
    }
    const configContent = fs.readFileSync(configPath).toString().trim();
    if (!configContent) {
        fatalLog('登陆已失效，请重新登录，命令为yarn sign');
    }

    const configList = configContent.split(':');
    if (configList.length !== 2) {
        fatalLog('登陆已失效，请重新登录，命令为yarn sign');
    }

    const token = configList[1].trim();
    if (!token) {
        fatalLog('登陆已失效，请重新登录，命令为yarn sign');
    }
    return token;
}
