"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.registerApi = void 0;
const log_1 = require("../util/log");
const login_1 = require("./login");
const constant_1 = require("../util/constant");
const fetch = require('node-fetch');
const registerApi = async (registerParams, registerType) => {
    const token = (0, login_1.checkLogin)();
    const _octo = await (0, constant_1.getSignature)();
    const url = constant_1.registerUrlMap[registerType];
    const queryParams = {};
    Object.keys(constant_1.registerParamsKeyMap[registerType]).map((key) => {
        if (key === 'libName' || key === 'templateName') {
            queryParams[key] = registerParams['name'];
        }
        else {
            queryParams[key] = registerParams[key];
        }
    });
    queryParams['token'] = token;
    console.log(queryParams);
    try {
        const value = await fetch(`${constant_1.envHost}${url}`, {
            method: 'POST',
            body: JSON.stringify(queryParams),
            headers: {
                "Content-Type": 'application/json',
                "oceanus-auth": _octo
            },
        });
        const data = await value.json();
        console.log(data);
        const gitUrl = data && data.data && data.data.git;
        const libId = data && data.data && data.data.libId;
        const libName = data && data.data && data.data.libName;
        return {
            gitUrl,
            libId,
            libName
        };
    }
    catch (e) {
        (0, log_1.fatalLog)(`register component failed: ${e}.`);
    }
};
exports.registerApi = registerApi;
