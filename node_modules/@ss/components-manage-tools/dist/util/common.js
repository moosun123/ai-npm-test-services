"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.findReactPort = exports.findPort = exports.getPuppeteer = void 0;
const cross_spawn_1 = require("cross-spawn");
const chalk_1 = __importDefault(require("chalk"));
const portfinder_1 = require("portfinder");
function isNotFoundError(error = '') {
    return error.indexOf('Cannot find module') === 0;
}
async function getPuppeteer() {
    try {
        return require('puppeteer');
    }
    catch (error) {
        if (isNotFoundError(error.message)) {
            try {
                return require('import-global')('puppeteer');
            }
            catch (importGlobalErr) {
                if (isNotFoundError(importGlobalErr.message)) {
                    console.log(chalk_1.default.yellow('\n\nCannot find puppeteer in current environment.'));
                    console.log(chalk_1.default.yellow('Installing globally puppeteer, please wait a moment.\n'));
                    await (0, cross_spawn_1.sync)('npm', ['config', 'set', 'puppeteer_download_host=http://npm.sankuai.com/mirrors']);
                    const result = (0, cross_spawn_1.sync)('npm', ['install', 'puppeteer@1.x', '-g', '--registry', 'https://registry.npm.taobao.org'], { stdio: 'inherit' });
                    await (0, cross_spawn_1.sync)('npm', ['config', 'delete', 'puppeteer_download_host']);
                    if (result.error) {
                        console.log(chalk_1.default.red('\n\nInstall Error. \nPlease install puppeteer using the following commands:'));
                        console.log(chalk_1.default.white('\n  npm uninstall puppeteer -g'));
                        console.log(chalk_1.default.white('\n  PUPPETEER_DOWNLOAD_HOST=https://storage.googleapis.com.cnpmjs.org npm i puppeteer -g --registry=https://registry.npm.taobao.org'));
                        console.log(chalk_1.default.white('\n  screenshot -u http://www.example.com\n'));
                        process.exit(1);
                    }
                    console.log(chalk_1.default.green('\nPuppeteer installed.\n'));
                    return require('import-global')('puppeteer');
                }
                throw Error(importGlobalErr);
            }
        }
        throw Error(error);
    }
}
exports.getPuppeteer = getPuppeteer;
async function findPort() {
    const defaultPort = 9000;
    const maxPort = 10000;
    return await (0, portfinder_1.getPortPromise)({
        port: defaultPort,
        stopPort: maxPort,
    });
}
exports.findPort = findPort;
async function findReactPort() {
    const defaultPort = 3000;
    const maxPort = 10000;
    return await (0, portfinder_1.getPortPromise)({
        port: defaultPort,
        stopPort: maxPort,
    });
}
exports.findReactPort = findReactPort;
